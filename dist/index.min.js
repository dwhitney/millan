"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var chevrotain=require("chevrotain"),extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r])};function __extends(n,e){function r(){this.constructor=n}extendStatics(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var __assign=Object.assign||function(n){for(var e,r=1,a=arguments.length;r<a;r++)for(var t in e=arguments[r])Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n},regex={or:function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return new RegExp(n.map(function(n){return"("+n.source+")"}).join("|"))},and:function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return new RegExp(n.map(function(n){return"("+n.source+")"}).join(""))},option:function(n){return new RegExp("("+n.source+")?")},many:function(n){return new RegExp("("+n.source+")*")}},IRIREF=/<[^<>\\{}|\^`\u0000-\u0020]*>/,PN_CHARS_BASE=/[A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDBFF][\uDC00-\uDFFF]/,LANGTAG=/@[a-zA-Z]+(-[a-zA-Z0-9]+)*/,INTEGER=/\d+/,DECIMAL=/(\d*\.\d+)|(\d+\.\d*)/,EXPONENT=/[eE][+-]?\d+/,ECHAR=/\\[tbnrf"'\\]/,WS=/[\u0020\u0009\u000d\u000a]/,HEX=/[0-9A-Fa-f]/,PN_LOCAL_ESC=/\\[_~.\-!\$&'()*+,=\/?#@%;]/,PN_CHARS_U=regex.or(PN_CHARS_BASE,/_/),PN_CHARS=regex.or(PN_CHARS_U,/-/,/\d/,/\u00b7/,/[\u0300-\u036f]/,/[\u203f-\u2040]/),PN_PREFIX=regex.and(PN_CHARS_BASE,regex.option(regex.and(regex.many(regex.or(PN_CHARS,/\./)),PN_CHARS))),PERCENT=regex.and(/%/,HEX,HEX),PLX=regex.or(PERCENT,PN_LOCAL_ESC),PN_LOCAL=regex.and(regex.or(PN_CHARS_U,/:/,/\d/,PLX),regex.option(regex.and(regex.many(regex.or(PN_CHARS,/\./,/:/,PLX)),regex.or(PN_CHARS,/:/,PLX)))),VARNAME=regex.and(regex.or(PN_CHARS_U,/\d/),regex.many(regex.or(PN_CHARS_U,/\d/,/\u00b7/,/[\u0300-\u036f]/,/[\u203f-\u2040]/))),ANON=regex.and(/\[/,regex.many(WS),/\]/),NIL=regex.and(/\(/,regex.many(WS),/\)/),STRING_LITERAL1=regex.and(/'/,regex.many(regex.or(/[^\u0027\u005C\u000A\u000D]/,ECHAR)),/'/),STRING_LITERAL2=regex.and(/"/,regex.many(regex.or(/[^\u0022\u005C\u000A\u000D]/,ECHAR)),/"/),STRING_LITERAL_LONG1=regex.and(/'''/,regex.many(regex.and(regex.option(regex.or(/'/,/''/)),regex.or(/[^'\\]/,ECHAR))),/'''/),STRING_LITERAL_LONG2=regex.and(/"""/,regex.many(regex.and(regex.option(regex.or(/"/,/""/)),regex.or(/[^"\\]/,ECHAR))),/"""/),DOUBLE=regex.or(regex.and(/\d+\.\d*/,EXPONENT),regex.and(/\.\d+/,EXPONENT),regex.and(/\d+/,EXPONENT)),INTEGER_POSITIVE=regex.and(/\+/,INTEGER),DECIMAL_POSITIVE=regex.and(/\+/,DECIMAL),DOUBLE_POSITIVE=regex.and(/\+/,DOUBLE),INTEGER_NEGATIVE=regex.and(/-/,INTEGER),DECIMAL_NEGATIVE=regex.and(/-/,DECIMAL),DOUBLE_NEGATIVE=regex.and(/-/,DOUBLE),VAR1=regex.and(/\?/,VARNAME),VAR2=regex.and(/\$/,VARNAME),BLANK_NODE_LABEL=regex.and(/_:/,regex.or(PN_CHARS_U,/\d/),regex.option(regex.and(regex.many(regex.or(PN_CHARS,/\./)),PN_CHARS))),PNAME_NS=regex.and(regex.option(PN_PREFIX),/:/),PNAME_LN=regex.and(PNAME_NS,PN_LOCAL),matchers=Object.freeze({IRIREF:IRIREF,PN_CHARS_BASE:PN_CHARS_BASE,LANGTAG:LANGTAG,INTEGER:INTEGER,DECIMAL:DECIMAL,EXPONENT:EXPONENT,ECHAR:ECHAR,WS:WS,HEX:HEX,PN_LOCAL_ESC:PN_LOCAL_ESC,PN_CHARS_U:PN_CHARS_U,PN_CHARS:PN_CHARS,PN_PREFIX:PN_PREFIX,PERCENT:PERCENT,PLX:PLX,PN_LOCAL:PN_LOCAL,VARNAME:VARNAME,ANON:ANON,NIL:NIL,STRING_LITERAL1:STRING_LITERAL1,STRING_LITERAL2:STRING_LITERAL2,STRING_LITERAL_LONG1:STRING_LITERAL_LONG1,STRING_LITERAL_LONG2:STRING_LITERAL_LONG2,DOUBLE:DOUBLE,INTEGER_POSITIVE:INTEGER_POSITIVE,DECIMAL_POSITIVE:DECIMAL_POSITIVE,DOUBLE_POSITIVE:DOUBLE_POSITIVE,INTEGER_NEGATIVE:INTEGER_NEGATIVE,DECIMAL_NEGATIVE:DECIMAL_NEGATIVE,DOUBLE_NEGATIVE:DOUBLE_NEGATIVE,VAR1:VAR1,VAR2:VAR2,BLANK_NODE_LABEL:BLANK_NODE_LABEL,PNAME_NS:PNAME_NS,PNAME_LN:PNAME_LN}),STRING_LITERAL_LONG1_TOKEN=chevrotain.createToken({name:"STRING_LITERAL_LONG1",pattern:STRING_LITERAL_LONG1}),STRING_LITERAL_LONG2_TOKEN=chevrotain.createToken({name:"STRING_LITERAL_LONG2",pattern:STRING_LITERAL_LONG2}),PNAME_LN_TOKEN=chevrotain.createToken({name:"PNAME_LN",pattern:PNAME_LN}),terminals={IRIREF:chevrotain.createToken({name:"IRIREF",pattern:IRIREF,label:"<http://example.com>"}),LANGTAG:chevrotain.createToken({name:"LANGTAG",pattern:LANGTAG}),INTEGER:chevrotain.createToken({name:"INTEGER",pattern:INTEGER}),DECIMAL:chevrotain.createToken({name:"DECIMAL",pattern:DECIMAL}),DOUBLE:chevrotain.createToken({name:"DOUBLE",pattern:DOUBLE}),INTEGER_POSITIVE:chevrotain.createToken({name:"INTEGER_POSITIVE",pattern:INTEGER_POSITIVE}),DECIMAL_POSITIVE:chevrotain.createToken({name:"DECIMAL_POSITIVE",pattern:DECIMAL_POSITIVE}),DOUBLE_POSITIVE:chevrotain.createToken({name:"DOUBLE_POSITIVE",pattern:DOUBLE_POSITIVE}),INTEGER_NEGATIVE:chevrotain.createToken({name:"INTEGER_NEGATIVE",pattern:INTEGER_NEGATIVE}),DECIMAL_NEGATIVE:chevrotain.createToken({name:"DECIMAL_NEGATIVE",pattern:DECIMAL_NEGATIVE}),DOUBLE_NEGATIVE:chevrotain.createToken({name:"DOUBLE_NEGATIVE",pattern:DOUBLE_NEGATIVE}),STRING_LITERAL_LONG1:STRING_LITERAL_LONG1_TOKEN,STRING_LITERAL_LONG2:STRING_LITERAL_LONG2_TOKEN,STRING_LITERAL1:chevrotain.createToken({name:"STRING_LITERAL1",pattern:STRING_LITERAL1,longer_alt:STRING_LITERAL_LONG1_TOKEN}),STRING_LITERAL2:chevrotain.createToken({name:"STRING_LITERAL2",pattern:STRING_LITERAL2,longer_alt:STRING_LITERAL_LONG2_TOKEN}),NIL:chevrotain.createToken({name:"NIL",pattern:NIL,label:"()"}),ANON:chevrotain.createToken({name:"ANON",pattern:ANON,label:"[]"}),PNAME_LN:PNAME_LN_TOKEN,PNAME_NS:chevrotain.createToken({name:"PNAME_NS",pattern:PNAME_NS,longer_alt:PNAME_LN_TOKEN}),BLANK_NODE_LABEL:chevrotain.createToken({name:"BLANK_NODE_LABEL",pattern:BLANK_NODE_LABEL}),VAR1:chevrotain.createToken({name:"VAR1",pattern:VAR1,label:"?foo"}),VAR2:chevrotain.createToken({name:"VAR2",pattern:VAR2,label:"?bar"}),PERCENT:chevrotain.createToken({name:"PERCENT",pattern:PERCENT})},MAX_LENGTH=chevrotain.createToken({name:"MAX_LENGTH",pattern:/MAX LENGTH/i}),keywords={SELECT:chevrotain.createToken({name:"SELECT",pattern:/SELECT/i}),CONSTRUCT:chevrotain.createToken({name:"CONSTRUCT",pattern:/CONSTRUCT/i}),DISTINCT:chevrotain.createToken({name:"DISTINCT",pattern:/DISTINCT/i}),START:chevrotain.createToken({name:"START",pattern:/START/i}),END:chevrotain.createToken({name:"END",pattern:/END/i}),VIA:chevrotain.createToken({name:"VIA",pattern:/VIA/i}),PATHS:chevrotain.createToken({name:"PATHS",pattern:/PATHS/i}),PATHS_ALL:chevrotain.createToken({name:"PATHS_ALL",pattern:/PATHS ALL/i}),PATHS_SHORTEST:chevrotain.createToken({name:"PATHS_SHORTEST",pattern:/PATHS SHORTEST/i}),CYCLIC:chevrotain.createToken({name:"CYCLIC",pattern:/CYCLIC/i}),AS:chevrotain.createToken({name:"AS",pattern:/AS/i}),WHERE:chevrotain.createToken({name:"WHERE",pattern:/WHERE/i}),A:chevrotain.createToken({name:"A",pattern:/a/i}),GroupBy:chevrotain.createToken({name:"GroupBy",pattern:/group by/i}),OrderBy:chevrotain.createToken({name:"OrderBy",pattern:/order by/i}),By:chevrotain.createToken({name:"By",pattern:/By/i}),BASE:chevrotain.createToken({name:"BASE",pattern:/BASE/i}),PREFIX:chevrotain.createToken({name:"PREFIX",pattern:/PREFIX/i}),DESCRIBE:chevrotain.createToken({name:"DESCRIBE",pattern:/DESCRIBE/i}),ASK:chevrotain.createToken({name:"ASK",pattern:/ASK/i}),FROM:chevrotain.createToken({name:"FROM",pattern:/FROM/i}),REDUCED:chevrotain.createToken({name:"REDUCED",pattern:/REDUCED/i}),NAMED:chevrotain.createToken({name:"NAMED",pattern:/NAMED/i}),HAVING:chevrotain.createToken({name:"HAVING",pattern:/HAVING/i}),ASC:chevrotain.createToken({name:"ASC",pattern:/ASC/i}),DESC:chevrotain.createToken({name:"DESC",pattern:/DESC/i}),OFFSET:chevrotain.createToken({name:"OFFSET",pattern:/OFFSET/i}),LIMIT:chevrotain.createToken({name:"LIMIT",pattern:/LIMIT/i}),VALUES:chevrotain.createToken({name:"VALUES",pattern:/VALUES/i}),LOAD:chevrotain.createToken({name:"LOAD",pattern:/LOAD/i}),SILENT:chevrotain.createToken({name:"SILENT",pattern:/SILENT/i}),INTO:chevrotain.createToken({name:"INTO",pattern:/INTO/i}),CLEAR:chevrotain.createToken({name:"CLEAR",pattern:/CLEAR/i}),DROP:chevrotain.createToken({name:"DROP",pattern:/DROP/i}),CREATE:chevrotain.createToken({name:"CREATE",pattern:/CREATE/i}),ADD:chevrotain.createToken({name:"ADD",pattern:/ADD/i}),TO:chevrotain.createToken({name:"TO",pattern:/TO/i}),MOVE:chevrotain.createToken({name:"MOVE",pattern:/MOVE/i}),COPY:chevrotain.createToken({name:"COPY",pattern:/COPY/i}),INSERT_DATA:chevrotain.createToken({name:"INSERT_DATA",pattern:/Insert +Data/i}),DELETE_DATA:chevrotain.createToken({name:"DELETE_DATA",pattern:/Delete +Data/i}),DELETE_WHERE:chevrotain.createToken({name:"DELETE_WHERE",pattern:/Delete +Where/i}),WITH:chevrotain.createToken({name:"WITH",pattern:/WITH/i}),DELETE:chevrotain.createToken({name:"DELETE",pattern:/DELETE/i}),INSERT:chevrotain.createToken({name:"INSERT",pattern:/INSERT/i}),USING:chevrotain.createToken({name:"USING",pattern:/USING/i}),DEFAULT:chevrotain.createToken({name:"DEFAULT",pattern:/DEFAULT/i}),GRAPH:chevrotain.createToken({name:"GRAPH",pattern:/GRAPH/i}),ALL:chevrotain.createToken({name:"ALL",pattern:/ALL/i}),OPTIONAL:chevrotain.createToken({name:"OPTIONAL",pattern:/OPTIONAL/i}),SERVICE:chevrotain.createToken({name:"SERVICE",pattern:/SERVICE/i}),BIND:chevrotain.createToken({name:"BIND",pattern:/BIND/i}),UNDEF:chevrotain.createToken({name:"UNDEF",pattern:/UNDEF/i}),MINUS:chevrotain.createToken({name:"MINUS",pattern:/MINUS/i}),UNION:chevrotain.createToken({name:"UNION",pattern:/UNION/i}),FILTER:chevrotain.createToken({name:"FILTER",pattern:/FILTER/i}),STR:chevrotain.createToken({name:"STR",pattern:/STR/i}),LANG:chevrotain.createToken({name:"LANG",pattern:/LANG/i}),LANGMATCHERS:chevrotain.createToken({name:"LANGMATCHERS",pattern:/LANGMATCHERS/i}),DATATYPE:chevrotain.createToken({name:"DATATYPE",pattern:/DATATYPE/i}),BOUND:chevrotain.createToken({name:"BOUND",pattern:/BOUND/i}),IRI:chevrotain.createToken({name:"IRI",pattern:/IRI/i}),URI:chevrotain.createToken({name:"URI",pattern:/URI/i}),BNODE:chevrotain.createToken({name:"BNODE",pattern:/BNODE/i}),RAND:chevrotain.createToken({name:"RAND",pattern:/RAND/i}),ABS:chevrotain.createToken({name:"ABS",pattern:/ABS/i}),CEIL:chevrotain.createToken({name:"CEIL",pattern:/CEIL/i}),FLOOR:chevrotain.createToken({name:"FLOOR",pattern:/FLOOR/i}),ROUND:chevrotain.createToken({name:"ROUND",pattern:/ROUND/i}),CONCAT:chevrotain.createToken({name:"CONCAT",pattern:/CONCAT/i}),STRLEN:chevrotain.createToken({name:"STRLEN",pattern:/STRLEN/i}),UCASE:chevrotain.createToken({name:"UCASE",pattern:/UCASE/i}),LCASE:chevrotain.createToken({name:"LCASE",pattern:/LCASE/i}),ENCODE_FOR_URI:chevrotain.createToken({name:"ENCODE_FOR_URI",pattern:/ENCODE_FOR_URI/i}),CONTAINS:chevrotain.createToken({name:"CONTAINS",pattern:/CONTAINS/i}),STRSTARTS:chevrotain.createToken({name:"STRSTARTS",pattern:/STRSTARTS/i}),STRENDS:chevrotain.createToken({name:"STRENDS",pattern:/STRENDS/i}),STRBEFORE:chevrotain.createToken({name:"STRBEFORE",pattern:/STRBEFORE/i}),STRAFTER:chevrotain.createToken({name:"STRAFTER",pattern:/STRAFTER/i}),YEAR:chevrotain.createToken({name:"YEAR",pattern:/YEAR/i}),MONTH:chevrotain.createToken({name:"MONTH",pattern:/MONTH/i}),DAY:chevrotain.createToken({name:"DAY",pattern:/DAY/i}),HOURS:chevrotain.createToken({name:"HOURS",pattern:/HOURS/i}),MINUTES:chevrotain.createToken({name:"MINUTES",pattern:/MINUTES/i}),SECONDS:chevrotain.createToken({name:"SECONDS",pattern:/SECONDS/i}),TIMEZONE:chevrotain.createToken({name:"TIMEZONE",pattern:/TIMEZONE/i}),TZ:chevrotain.createToken({name:"TZ",pattern:/TZ/i}),NOW:chevrotain.createToken({name:"NOW",pattern:/NOW/i}),UUID:chevrotain.createToken({name:"UUID",pattern:/UUID/i}),STRUUID:chevrotain.createToken({name:"STRUUID",pattern:/STRUUID/i}),MD5:chevrotain.createToken({name:"MD5",pattern:/MD5/i}),SHA1:chevrotain.createToken({name:"SHA1",pattern:/SHA1/i}),SHA256:chevrotain.createToken({name:"SHA256",pattern:/SHA256/i}),SHA384:chevrotain.createToken({name:"SHA384",pattern:/SHA384/i}),SHA512:chevrotain.createToken({name:"SHA512",pattern:/SHA512/i}),COALESCE:chevrotain.createToken({name:"COALESCE",pattern:/COALESCE/i}),IF:chevrotain.createToken({name:"IF",pattern:/IF/i}),STRLANG:chevrotain.createToken({name:"STRLANG",pattern:/STRLANG/i}),STRDT:chevrotain.createToken({name:"STRDT",pattern:/STRDT/i}),sameTerm:chevrotain.createToken({name:"sameTerm",pattern:/sameTerm/i}),isIRI:chevrotain.createToken({name:"isIRI",pattern:/isIRI/i}),isURI:chevrotain.createToken({name:"isURI",pattern:/isURI/i}),isBlank:chevrotain.createToken({name:"isBlank",pattern:/isBlank/i}),isLiteral:chevrotain.createToken({name:"isLiteral",pattern:/isLiteral/i}),isNumeric:chevrotain.createToken({name:"isNumeric",pattern:/isNumeric/i}),REGEX:chevrotain.createToken({name:"REGEX",pattern:/REGEX/i}),SUBSTR:chevrotain.createToken({name:"SUBSTR",pattern:/SUBSTR/i}),REPLACE:chevrotain.createToken({name:"REPLACE",pattern:/REPLACE/i}),EXISTS:chevrotain.createToken({name:"EXISTS",pattern:/EXISTS/i}),NOT_EXISTS:chevrotain.createToken({name:"NOT_EXISTS",pattern:/NOT EXISTS/i}),COUNT:chevrotain.createToken({name:"COUNT",pattern:/COUNT/i}),SUM:chevrotain.createToken({name:"SUM",pattern:/SUM/i}),MIN:chevrotain.createToken({name:"MIN",pattern:/MIN/i}),AVG:chevrotain.createToken({name:"AVG",pattern:/AVG/i}),SAMPLE:chevrotain.createToken({name:"SAMPLE",pattern:/SAMPLE/i}),GROUP_CONCAT:chevrotain.createToken({name:"GROUP_CONCAT",pattern:/GROUP_CONCAT/i}),SEPARATOR:chevrotain.createToken({name:"SEPARATOR",pattern:/SEPARATOR/i}),TRUE:chevrotain.createToken({name:"TRUE",pattern:/TRUE/i}),FALSE:chevrotain.createToken({name:"FALSE",pattern:/FALSE/i}),IN:chevrotain.createToken({name:"IN",pattern:/IN/i}),NOT_IN:chevrotain.createToken({name:"NOT_IN",pattern:/NOT IN/i}),MAX_LENGTH:MAX_LENGTH,MAX:chevrotain.createToken({name:"MAX",pattern:/MAX/i,longer_alt:MAX_LENGTH})},sparqlTokenMap={IRIREF:terminals.IRIREF,LANGTAG:terminals.LANGTAG,INTEGER:terminals.INTEGER,DECIMAL:terminals.DECIMAL,DOUBLE:terminals.DOUBLE,INTEGER_POSITIVE:terminals.INTEGER_POSITIVE,DECIMAL_POSITIVE:terminals.DECIMAL_POSITIVE,DOUBLE_POSITIVE:terminals.DOUBLE_POSITIVE,INTEGER_NEGATIVE:terminals.INTEGER_NEGATIVE,DECIMAL_NEGATIVE:terminals.DECIMAL_NEGATIVE,DOUBLE_NEGATIVE:terminals.DOUBLE_NEGATIVE,STRING_LITERAL1:terminals.STRING_LITERAL1,STRING_LITERAL2:terminals.STRING_LITERAL2,STRING_LITERAL_LONG1:terminals.STRING_LITERAL_LONG1,STRING_LITERAL_LONG2:terminals.STRING_LITERAL_LONG2,NIL:terminals.NIL,ANON:terminals.ANON,PNAME_NS:terminals.PNAME_NS,PNAME_LN:terminals.PNAME_LN,BLANK_NODE_LABEL:terminals.BLANK_NODE_LABEL,VAR1:terminals.VAR1,VAR2:terminals.VAR2,PERCENT:terminals.PERCENT,Comment:chevrotain.createToken({name:"Comment",pattern:/#[^\n]*/,group:"comments"}),LCurly:chevrotain.createToken({name:"LCurly",pattern:"{"}),RCurly:chevrotain.createToken({name:"RCurly",pattern:"}"}),LParen:chevrotain.createToken({name:"LParen",pattern:"("}),RParen:chevrotain.createToken({name:"RParen",pattern:")"}),WhiteSpace:chevrotain.createToken({name:"WhiteSpace",pattern:/\s+/,group:chevrotain.Lexer.SKIPPED,line_breaks:!0}),Star:chevrotain.createToken({name:"Star",pattern:"*"}),Unknown:chevrotain.createToken({name:"Unknown",pattern:/\w+/}),Period:chevrotain.createToken({name:"Period",pattern:"."}),QuestionMark:chevrotain.createToken({name:"QuestionMark",pattern:"?"}),Plus:chevrotain.createToken({name:"Plus",pattern:"+"}),Minus:chevrotain.createToken({name:"Minus",pattern:"-"}),LBracket:chevrotain.createToken({name:"LBracket",pattern:"["}),RBracket:chevrotain.createToken({name:"RBracket",pattern:"]"}),Semicolon:chevrotain.createToken({name:"Semicolon",pattern:";"}),Comma:chevrotain.createToken({name:"Comma",pattern:","}),Pipe:chevrotain.createToken({name:"Pipe",pattern:"|"}),ForwardSlash:chevrotain.createToken({name:"ForwardSlash",pattern:"/"}),Caret:chevrotain.createToken({name:"Caret",pattern:"^"}),DoubleCaret:chevrotain.createToken({name:"DoubleCaret",pattern:"^^"}),Bang:chevrotain.createToken({name:"Bang",pattern:"!"}),LogicalOr:chevrotain.createToken({name:"LogicalOr",pattern:"||"}),LogicalAnd:chevrotain.createToken({name:"LogicalAnd",pattern:"&&"}),Equals:chevrotain.createToken({name:"Equals",pattern:"="}),NotEquals:chevrotain.createToken({name:"NotEquals",pattern:"!="}),LessThan:chevrotain.createToken({name:"LessThan",pattern:"<"}),GreaterThan:chevrotain.createToken({name:"GreaterThan",pattern:">"}),LessThanEquals:chevrotain.createToken({name:"LessThanEquals",pattern:"<="}),GreaterThanEquals:chevrotain.createToken({name:"GreaterThanEquals",pattern:">="}),SELECT:keywords.SELECT,CONSTRUCT:keywords.CONSTRUCT,DISTINCT:keywords.DISTINCT,START:keywords.START,END:keywords.END,VIA:keywords.VIA,CYCLIC:keywords.CYCLIC,PATHS_SHORTEST:keywords.PATHS_SHORTEST,PATHS_ALL:keywords.PATHS_ALL,PATHS:keywords.PATHS,AS:keywords.AS,WHERE:keywords.WHERE,A:keywords.A,GroupBy:keywords.GroupBy,OrderBy:keywords.OrderBy,By:keywords.By,BASE:keywords.BASE,PREFIX:keywords.PREFIX,DESCRIBE:keywords.DESCRIBE,ASK:keywords.ASK,FROM:keywords.FROM,REDUCED:keywords.REDUCED,NAMED:keywords.NAMED,HAVING:keywords.HAVING,ASC:keywords.ASC,DESC:keywords.DESC,OFFSET:keywords.OFFSET,LIMIT:keywords.LIMIT,VALUES:keywords.VALUES,LOAD:keywords.LOAD,SILENT:keywords.SILENT,INTO:keywords.INTO,CLEAR:keywords.CLEAR,DROP:keywords.DROP,CREATE:keywords.CREATE,ADD:keywords.ADD,TO:keywords.TO,MOVE:keywords.MOVE,COPY:keywords.COPY,INSERT_DATA:keywords.INSERT_DATA,DELETE_DATA:keywords.DELETE_DATA,DELETE_WHERE:keywords.DELETE_WHERE,WITH:keywords.WITH,DELETE:keywords.DELETE,INSERT:keywords.INSERT,USING:keywords.USING,DEFAULT:keywords.DEFAULT,GRAPH:keywords.GRAPH,ALL:keywords.ALL,OPTIONAL:keywords.OPTIONAL,SERVICE:keywords.SERVICE,BIND:keywords.BIND,UNDEF:keywords.UNDEF,MINUS:keywords.MINUS,UNION:keywords.UNION,FILTER:keywords.FILTER,STR:keywords.STR,LANG:keywords.LANG,LANGMATCHERS:keywords.LANGMATCHERS,DATATYPE:keywords.DATATYPE,BOUND:keywords.BOUND,IRI:keywords.IRI,URI:keywords.URI,BNODE:keywords.BNODE,RAND:keywords.RAND,ABS:keywords.ABS,CEIL:keywords.CEIL,FLOOR:keywords.FLOOR,ROUND:keywords.ROUND,CONCAT:keywords.CONCAT,STRLEN:keywords.STRLEN,UCASE:keywords.UCASE,LCASE:keywords.LCASE,ENCODE_FOR_URI:keywords.ENCODE_FOR_URI,CONTAINS:keywords.CONTAINS,STRSTARTS:keywords.STRSTARTS,STRENDS:keywords.STRENDS,STRBEFORE:keywords.STRBEFORE,STRAFTER:keywords.STRAFTER,YEAR:keywords.YEAR,MONTH:keywords.MONTH,DAY:keywords.DAY,HOURS:keywords.HOURS,MINUTES:keywords.MINUTES,SECONDS:keywords.SECONDS,TIMEZONE:keywords.TIMEZONE,TZ:keywords.TZ,NOW:keywords.NOW,UUID:keywords.UUID,STRUUID:keywords.STRUUID,MD5:keywords.MD5,SHA1:keywords.SHA1,SHA256:keywords.SHA256,SHA384:keywords.SHA384,SHA512:keywords.SHA512,COALESCE:keywords.COALESCE,IF:keywords.IF,STRLANG:keywords.STRLANG,STRDT:keywords.STRDT,sameTerm:keywords.sameTerm,isIRI:keywords.isIRI,isURI:keywords.isURI,isBlank:keywords.isBlank,isLiteral:keywords.isLiteral,isNumeric:keywords.isNumeric,REGEX:keywords.REGEX,SUBSTR:keywords.SUBSTR,REPLACE:keywords.REPLACE,EXISTS:keywords.EXISTS,NOT_EXISTS:keywords.NOT_EXISTS,COUNT:keywords.COUNT,SUM:keywords.SUM,MIN:keywords.MIN,AVG:keywords.AVG,SAMPLE:keywords.SAMPLE,GROUP_CONCAT:keywords.GROUP_CONCAT,SEPARATOR:keywords.SEPARATOR,TRUE:keywords.TRUE,FALSE:keywords.FALSE,IN:keywords.IN,NOT_IN:keywords.NOT_IN,MAX_LENGTH:keywords.MAX_LENGTH,MAX:keywords.MAX},baseTokens=[sparqlTokenMap.NIL,sparqlTokenMap.ANON,sparqlTokenMap.LCurly,sparqlTokenMap.RCurly,sparqlTokenMap.LParen,sparqlTokenMap.RParen,sparqlTokenMap.WhiteSpace,sparqlTokenMap.IRIREF,sparqlTokenMap.LANGTAG,sparqlTokenMap.DOUBLE,sparqlTokenMap.DECIMAL,sparqlTokenMap.INTEGER,sparqlTokenMap.DOUBLE_POSITIVE,sparqlTokenMap.DECIMAL_POSITIVE,sparqlTokenMap.INTEGER_POSITIVE,sparqlTokenMap.DOUBLE_NEGATIVE,sparqlTokenMap.DECIMAL_NEGATIVE,sparqlTokenMap.INTEGER_NEGATIVE,sparqlTokenMap.STRING_LITERAL1,sparqlTokenMap.STRING_LITERAL2,sparqlTokenMap.STRING_LITERAL_LONG1,sparqlTokenMap.STRING_LITERAL_LONG2,sparqlTokenMap.PNAME_NS,sparqlTokenMap.PNAME_LN,sparqlTokenMap.BLANK_NODE_LABEL,sparqlTokenMap.VAR1,sparqlTokenMap.VAR2,sparqlTokenMap.Comment,sparqlTokenMap.SELECT,sparqlTokenMap.CONSTRUCT,sparqlTokenMap.DISTINCT,sparqlTokenMap.Star,sparqlTokenMap.WHERE,sparqlTokenMap.GroupBy,sparqlTokenMap.OrderBy,sparqlTokenMap.By,sparqlTokenMap.Period,sparqlTokenMap.QuestionMark,sparqlTokenMap.Plus,sparqlTokenMap.Minus,sparqlTokenMap.LBracket,sparqlTokenMap.RBracket,sparqlTokenMap.PERCENT,sparqlTokenMap.BASE,sparqlTokenMap.PREFIX,sparqlTokenMap.DESCRIBE,sparqlTokenMap.ASK,sparqlTokenMap.FROM,sparqlTokenMap.REDUCED,sparqlTokenMap.NAMED,sparqlTokenMap.HAVING,sparqlTokenMap.ASC,sparqlTokenMap.DESC,sparqlTokenMap.OFFSET,sparqlTokenMap.LIMIT,sparqlTokenMap.VALUES,sparqlTokenMap.LOAD,sparqlTokenMap.SILENT,sparqlTokenMap.INTO,sparqlTokenMap.AS,sparqlTokenMap.CLEAR,sparqlTokenMap.DROP,sparqlTokenMap.CREATE,sparqlTokenMap.ADD,sparqlTokenMap.TO,sparqlTokenMap.MOVE,sparqlTokenMap.COPY,sparqlTokenMap.INSERT_DATA,sparqlTokenMap.DELETE_DATA,sparqlTokenMap.DELETE_WHERE,sparqlTokenMap.WITH,sparqlTokenMap.DELETE,sparqlTokenMap.INSERT,sparqlTokenMap.USING,sparqlTokenMap.DEFAULT,sparqlTokenMap.GRAPH,sparqlTokenMap.ALL,sparqlTokenMap.OPTIONAL,sparqlTokenMap.SERVICE,sparqlTokenMap.BIND,sparqlTokenMap.UNDEF,sparqlTokenMap.MINUS,sparqlTokenMap.UNION,sparqlTokenMap.FILTER,sparqlTokenMap.LANGMATCHERS,sparqlTokenMap.LANG,sparqlTokenMap.DATATYPE,sparqlTokenMap.BOUND,sparqlTokenMap.IRI,sparqlTokenMap.URI,sparqlTokenMap.BNODE,sparqlTokenMap.RAND,sparqlTokenMap.ABS,sparqlTokenMap.CEIL,sparqlTokenMap.FLOOR,sparqlTokenMap.ROUND,sparqlTokenMap.CONCAT,sparqlTokenMap.STRLEN,sparqlTokenMap.UCASE,sparqlTokenMap.LCASE,sparqlTokenMap.ENCODE_FOR_URI,sparqlTokenMap.CONTAINS,sparqlTokenMap.STRSTARTS,sparqlTokenMap.STRENDS,sparqlTokenMap.STRBEFORE,sparqlTokenMap.STRAFTER,sparqlTokenMap.YEAR,sparqlTokenMap.MONTH,sparqlTokenMap.DAY,sparqlTokenMap.HOURS,sparqlTokenMap.MINUTES,sparqlTokenMap.SECONDS,sparqlTokenMap.TIMEZONE,sparqlTokenMap.TZ,sparqlTokenMap.NOW,sparqlTokenMap.UUID,sparqlTokenMap.STRUUID,sparqlTokenMap.MD5,sparqlTokenMap.SHA1,sparqlTokenMap.SHA256,sparqlTokenMap.SHA384,sparqlTokenMap.SHA512,sparqlTokenMap.COALESCE,sparqlTokenMap.IF,sparqlTokenMap.STRLANG,sparqlTokenMap.STRDT,sparqlTokenMap.STR,sparqlTokenMap.sameTerm,sparqlTokenMap.isIRI,sparqlTokenMap.isURI,sparqlTokenMap.isBlank,sparqlTokenMap.isLiteral,sparqlTokenMap.isNumeric,sparqlTokenMap.REGEX,sparqlTokenMap.SUBSTR,sparqlTokenMap.REPLACE,sparqlTokenMap.EXISTS,sparqlTokenMap.NOT_EXISTS,sparqlTokenMap.COUNT,sparqlTokenMap.SUM,sparqlTokenMap.MIN,sparqlTokenMap.MAX_LENGTH,sparqlTokenMap.MAX,sparqlTokenMap.AVG,sparqlTokenMap.SAMPLE,sparqlTokenMap.GROUP_CONCAT,sparqlTokenMap.SEPARATOR,sparqlTokenMap.TRUE,sparqlTokenMap.FALSE,sparqlTokenMap.Semicolon,sparqlTokenMap.Comma,sparqlTokenMap.ForwardSlash,sparqlTokenMap.DoubleCaret,sparqlTokenMap.Caret,sparqlTokenMap.LogicalOr,sparqlTokenMap.Pipe,sparqlTokenMap.LogicalAnd,sparqlTokenMap.NotEquals,sparqlTokenMap.Bang,sparqlTokenMap.Equals,sparqlTokenMap.LessThanEquals,sparqlTokenMap.GreaterThanEquals,sparqlTokenMap.LessThan,sparqlTokenMap.GreaterThan,sparqlTokenMap.IN,sparqlTokenMap.NOT_IN,sparqlTokenMap.A,sparqlTokenMap.Unknown],pathsTokens=[sparqlTokenMap.START,sparqlTokenMap.END,sparqlTokenMap.VIA,sparqlTokenMap.CYCLIC,sparqlTokenMap.PATHS_SHORTEST,sparqlTokenMap.PATHS_ALL,sparqlTokenMap.PATHS],sparqlTokenTypes=baseTokens.concat(pathsTokens),tokens=Object.freeze({sparqlTokenMap:sparqlTokenMap,baseTokens:baseTokens,pathsTokens:pathsTokens,sparqlTokenTypes:sparqlTokenTypes});function log(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e]}var BaseSparqlParser=function(n){function e(e,r){void 0===e&&(e={});var a=n.call(this,e.input||[],r,__assign({recoveryEnabled:!0,outputCst:!0},e.config))||this;return a.tokenize=function(n){return a.lexer.tokenize(n).tokens},a.parse=function(n){a.input=a.lexer.tokenize(n).tokens;var e=a.SparqlDoc();return{errors:a.errors,cst:e}},a.SparqlDoc=a.RULE("SparqlDoc",function(){log("SparqlDoc"),a.SUBRULE(a.Prologue),a.OR([{ALT:function(){return a.SUBRULE(a.QueryUnit)}},{ALT:function(){return a.SUBRULE(a.UpdateUnit)}}])}),a.QueryUnit=a.RULE("QueryUnit",function(){log("QueryUnit"),a.SUBRULE(a.Query)}),a.Query=a.RULE("Query",function(){log("Query"),a.OR([{ALT:function(){return a.SUBRULE(a.SelectQuery)}},{ALT:function(){return a.SUBRULE(a.ConstructQuery)}},{ALT:function(){return a.SUBRULE(a.DescribeQuery)}},{ALT:function(){return a.SUBRULE(a.AskQuery)}}]),a.SUBRULE(a.ValuesClause)}),a.Constant=a.RULE("Constant",function(){a.OR([{ALT:function(){return a.SUBRULE(a.iri)}},{ALT:function(){return a.SUBRULE(a.RDFLiteral)}},{ALT:function(){return a.SUBRULE(a.NumericLiteral)}},{ALT:function(){return a.SUBRULE(a.BooleanLiteral)}}])}),a.MaxLength=a.RULE("MaxLength",function(){a.CONSUME(sparqlTokenMap.MAX_LENGTH),a.CONSUME(sparqlTokenMap.INTEGER)}),a.UpdateUnit=a.RULE("UpdateUnit",function(){log("UpdateUnit"),a.SUBRULE(a.Update)}),a.Prologue=a.RULE("Prologue",function(){log("Prologue"),a.MANY(function(){return a.OR([{ALT:function(){return a.SUBRULE(a.BaseDecl)}},{ALT:function(){return a.SUBRULE(a.PrefixDecl)}}])})}),a.BaseDecl=a.RULE("BaseDecl",function(){log("BaseDecl"),a.CONSUME(sparqlTokenMap.BASE),a.CONSUME(sparqlTokenMap.IRIREF)}),a.PrefixDecl=a.RULE("PrefixDecl",function(){log("PrefixDecl"),a.CONSUME(sparqlTokenMap.PREFIX),a.CONSUME(sparqlTokenMap.PNAME_NS),a.CONSUME(sparqlTokenMap.IRIREF)}),a.SelectQuery=a.RULE("SelectQuery",function(){log("SelectQuery"),a.SUBRULE(a.SelectClause),a.MANY(function(){return a.SUBRULE(a.DatasetClause)}),a.SUBRULE(a.WhereClause),a.SUBRULE(a.SolutionModifier)}),a.SubSelect=a.RULE("SubSelect",function(){log("SubSelect"),a.SUBRULE(a.SelectClause),a.SUBRULE(a.WhereClause),a.SUBRULE(a.SolutionModifier),a.SUBRULE(a.ValuesClause)}),a.SelectClause=a.RULE("SelectClause",function(){log("SelectClause"),a.CONSUME(sparqlTokenMap.SELECT),a.OPTION(function(){return a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.DISTINCT)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.REDUCED)}}])}),a.OR1([{ALT:function(){a.AT_LEAST_ONE(function(){return a.OR2([{ALT:function(){return a.SUBRULE(a.Var)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.AS),a.SUBRULE1(a.Var),a.CONSUME(sparqlTokenMap.RParen)}}])})}},{ALT:function(){return a.CONSUME(sparqlTokenMap.Star)}}])}),a.ConstructQuery=a.RULE("ConstructQuery",function(){a.CONSUME(sparqlTokenMap.CONSTRUCT),a.OR([{ALT:function(){a.SUBRULE(a.ConstructTemplate),a.MANY(function(){return a.SUBRULE(a.DatasetClause)}),a.SUBRULE(a.WhereClause)}},{ALT:function(){a.MANY1(function(){return a.SUBRULE1(a.DatasetClause)}),a.CONSUME(sparqlTokenMap.WHERE),a.CONSUME(sparqlTokenMap.LCurly),a.OPTION(function(){return a.SUBRULE(a.TriplesTemplate)}),a.CONSUME(sparqlTokenMap.RCurly)}}]),a.SUBRULE(a.SolutionModifier)}),a.DescribeQuery=a.RULE("DescribeQuery",function(){log("DescribeQuery"),a.CONSUME(sparqlTokenMap.DESCRIBE),a.OR([{ALT:function(){a.AT_LEAST_ONE(function(){return a.SUBRULE(a.VarOrIri)})}},{ALT:function(){return a.CONSUME(sparqlTokenMap.Star)}}]),a.MANY(function(){return a.SUBRULE(a.DatasetClause)}),a.OPTION(function(){return a.SUBRULE(a.WhereClause)}),a.SUBRULE(a.SolutionModifier)}),a.AskQuery=a.RULE("AskQuery",function(){log("AskQuery"),a.CONSUME(sparqlTokenMap.ASK),a.MANY(function(){return a.SUBRULE(a.DatasetClause)}),a.SUBRULE(a.WhereClause),a.SUBRULE(a.SolutionModifier)}),a.DatasetClause=a.RULE("DatasetClause",function(){log("DatasetClause"),a.CONSUME(sparqlTokenMap.FROM),a.OR([{ALT:function(){return a.SUBRULE(a.DefaultGraphClause)}},{ALT:function(){return a.SUBRULE(a.NamedGraphClause)}}])}),a.DefaultGraphClause=a.RULE("DefaultGraphClause",function(){log("DefaultGraphClause"),a.SUBRULE(a.SourceSelector)}),a.NamedGraphClause=a.RULE("NamedGraphClause",function(){log("NamedGraphClause"),a.CONSUME(sparqlTokenMap.NAMED),a.SUBRULE(a.SourceSelector)}),a.SourceSelector=a.RULE("SourceSelector",function(){log("SourceSelector"),a.SUBRULE(a.iri)}),a.WhereClause=a.RULE("WhereClause",function(){log("WhereClause"),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.WHERE)}),a.SUBRULE(a.GroupGraphPattern)}),a.SolutionModifier=a.RULE("SolutionModifier",function(){log("SolutionModifier"),a.OPTION(function(){return a.SUBRULE(a.GroupClause)}),a.OPTION1(function(){return a.SUBRULE(a.HavingClause)}),a.OPTION2(function(){return a.SUBRULE(a.OrderClause)}),a.OPTION3(function(){return a.SUBRULE(a.LimitOffsetClause)})}),a.GroupClause=a.RULE("GroupClause",function(){log("GroupClause"),a.CONSUME(sparqlTokenMap.GroupBy),a.AT_LEAST_ONE(function(){return a.SUBRULE(a.GroupCondition)})}),a.GroupCondition=a.RULE("GroupCondition",function(){log("GroupCondition"),a.OR([{ALT:function(){return a.SUBRULE(a.BuiltInCall)}},{ALT:function(){return a.SUBRULE(a.FunctionCall)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.OPTION(function(){a.CONSUME(sparqlTokenMap.AS),a.SUBRULE(a.Var)}),a.CONSUME(sparqlTokenMap.RParen)}},{ALT:function(){return a.SUBRULE1(a.Var)}}])}),a.HavingClause=a.RULE("HavingClause",function(){log("HavingClause"),a.CONSUME(sparqlTokenMap.HAVING),a.SUBRULE(a.HavingCondition)}),a.HavingCondition=a.RULE("HavingCondition",function(){log("HavingCondition"),a.SUBRULE(a.Constraint)}),a.OrderClause=a.RULE("OrderClause",function(){log("OrderClause"),a.CONSUME(sparqlTokenMap.OrderBy),a.AT_LEAST_ONE(function(){return a.SUBRULE(a.OrderCondition)})}),a.OrderCondition=a.RULE("OrderCondition",function(){log("OrderCondition"),a.OR([{ALT:function(){a.OR1([{ALT:function(){return a.CONSUME(sparqlTokenMap.ASC)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DESC)}}]),a.SUBRULE(a.BrackettedExpression)}},{ALT:function(){return a.SUBRULE(a.Constraint)}},{ALT:function(){return a.SUBRULE(a.Var)}}])}),a.LimitOffsetClause=a.RULE("LimitOffsetClause",function(){log("LimitOffsetClause"),a.OR([{ALT:function(){a.SUBRULE(a.LimitClause),a.OPTION(function(){return a.SUBRULE(a.OffsetClause)})}},{ALT:function(){a.SUBRULE1(a.OffsetClause),a.OPTION1(function(){return a.SUBRULE1(a.LimitClause)})}}])}),a.OffsetClause=a.RULE("OffsetClause",function(){log("OffsetClause"),a.CONSUME(sparqlTokenMap.OFFSET),a.CONSUME(sparqlTokenMap.INTEGER)}),a.LimitClause=a.RULE("LimitClause",function(){log("LimitClause"),a.CONSUME(sparqlTokenMap.LIMIT),a.CONSUME(sparqlTokenMap.INTEGER)}),a.ValuesClause=a.RULE("ValuesClause",function(){log("ValuesClause"),a.OPTION(function(){a.CONSUME(sparqlTokenMap.VALUES),a.SUBRULE(a.DataBlock)})}),a.Update=a.RULE("Update",function(){log("Update"),a.SUBRULE(a.Prologue),a.OPTION(function(){a.SUBRULE(a.Update1),a.OPTION1(function(){a.CONSUME(sparqlTokenMap.Semicolon),a.SUBRULE(a.Update)})})}),a.Update1=a.RULE("Update1",function(){log("Update1"),a.OR([{ALT:function(){return a.SUBRULE(a.Load)}},{ALT:function(){return a.SUBRULE(a.Clear)}},{ALT:function(){return a.SUBRULE(a.Drop)}},{ALT:function(){return a.SUBRULE(a.Add)}},{ALT:function(){return a.SUBRULE(a.Move)}},{ALT:function(){return a.SUBRULE(a.Copy)}},{ALT:function(){return a.SUBRULE(a.Create)}},{ALT:function(){return a.SUBRULE(a.InsertData)}},{ALT:function(){return a.SUBRULE(a.DeleteData)}},{ALT:function(){return a.SUBRULE(a.DeleteWhere)}},{ALT:function(){return a.SUBRULE(a.Modify)}}])}),a.Load=a.RULE("Load",function(){log("Load"),a.CONSUME(sparqlTokenMap.LOAD),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.iri),a.OPTION1(function(){a.CONSUME(sparqlTokenMap.INTO),a.SUBRULE(a.GraphRef)})}),a.Clear=a.RULE("Clear",function(){log("Clear"),a.CONSUME(sparqlTokenMap.CLEAR),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.GraphRefAll)}),a.Drop=a.RULE("Drop",function(){log("Drop"),a.CONSUME(sparqlTokenMap.DROP),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.GraphRefAll)}),a.Create=a.RULE("Create",function(){log("Create"),a.CONSUME(sparqlTokenMap.CREATE),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.GraphRefAll)}),a.Add=a.RULE("Add",function(){log("Add"),a.CONSUME(sparqlTokenMap.ADD),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.GraphOrDefault),a.CONSUME(sparqlTokenMap.TO),a.SUBRULE1(a.GraphOrDefault)}),a.Move=a.RULE("Move",function(){log("Move"),a.CONSUME(sparqlTokenMap.MOVE),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.GraphOrDefault),a.CONSUME(sparqlTokenMap.TO),a.SUBRULE1(a.GraphOrDefault)}),a.Copy=a.RULE("Copy",function(){log("Copy"),a.CONSUME(sparqlTokenMap.COPY),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.GraphOrDefault),a.CONSUME(sparqlTokenMap.TO),a.SUBRULE1(a.GraphOrDefault)}),a.InsertData=a.RULE("InsertData",function(){log("InsertData"),a.CONSUME(sparqlTokenMap.INSERT_DATA),a.SUBRULE(a.QuadData)}),a.DeleteData=a.RULE("DeleteData",function(){log("DeleteData"),a.CONSUME(sparqlTokenMap.DELETE_DATA),a.SUBRULE(a.QuadData)}),a.DeleteWhere=a.RULE("DeleteWhere",function(){log("DeleteWhere"),a.CONSUME(sparqlTokenMap.DELETE_WHERE),a.SUBRULE(a.QuadPattern)}),a.Modify=a.RULE("Modify",function(){log("Modify"),a.OPTION(function(){a.CONSUME(sparqlTokenMap.WITH),a.SUBRULE(a.iri)}),a.OR([{ALT:function(){a.SUBRULE(a.DeleteClause),a.OPTION1(function(){return a.SUBRULE(a.InsertClause)})}},{ALT:function(){return a.SUBRULE1(a.InsertClause)}}]),a.MANY(function(){return a.SUBRULE(a.UsingClause)}),a.CONSUME(sparqlTokenMap.WHERE),a.SUBRULE(a.GroupGraphPattern)}),a.DeleteClause=a.RULE("DeleteClause",function(){log("DeleteClause"),a.CONSUME(sparqlTokenMap.DELETE),a.SUBRULE(a.QuadPattern)}),a.InsertClause=a.RULE("InsertClause",function(){log("InsertClause"),a.CONSUME(sparqlTokenMap.INSERT),a.SUBRULE(a.QuadPattern)}),a.UsingClause=a.RULE("UsingClause",function(){log("UsingClause"),a.CONSUME(sparqlTokenMap.USING),a.OR([{ALT:function(){return a.SUBRULE(a.iri)}},{ALT:function(){a.CONSUME(sparqlTokenMap.NAMED),a.SUBRULE1(a.iri)}}])}),a.GraphOrDefault=a.RULE("GraphOrDefault",function(){log("GraphOrDefault"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.DEFAULT)}},{ALT:function(){a.OPTION(function(){return a.CONSUME(sparqlTokenMap.GRAPH)}),a.SUBRULE(a.iri)}}])}),a.GraphRef=a.RULE("GraphRef",function(){log("GraphRef"),a.CONSUME(sparqlTokenMap.GRAPH),a.SUBRULE(a.iri)}),a.GraphRefAll=a.RULE("GraphRefAll",function(){log("GraphRefAll"),a.OR([{ALT:function(){return a.SUBRULE(a.GraphRef)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DEFAULT)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.NAMED)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.ALL)}}])}),a.QuadPattern=a.RULE("QuadPattern",function(){log("QuadPattern"),a.CONSUME(sparqlTokenMap.LCurly),a.SUBRULE(a.Quads),a.CONSUME(sparqlTokenMap.RCurly)}),a.QuadData=a.RULE("QuadData",function(){log("QuadData"),a.CONSUME(sparqlTokenMap.LCurly),a.SUBRULE(a.Quads),a.CONSUME(sparqlTokenMap.RCurly)}),a.Quads=a.RULE("Quads",function(){log("Quads"),a.OPTION(function(){return a.SUBRULE(a.TriplesTemplate)}),a.MANY(function(){a.SUBRULE(a.QuadsNotTriples),a.OPTION1(function(){return a.CONSUME(sparqlTokenMap.Period)}),a.OPTION2(function(){return a.SUBRULE1(a.TriplesTemplate)})})}),a.QuadsNotTriples=a.RULE("QuadsNotTriples",function(){log("QuadsNotTriples"),a.CONSUME(sparqlTokenMap.GRAPH),a.SUBRULE(a.VarOrIri),a.CONSUME(sparqlTokenMap.LCurly),a.OPTION(function(){return a.SUBRULE(a.TriplesTemplate)}),a.CONSUME(sparqlTokenMap.RCurly)}),a.TriplesTemplate=a.RULE("TriplesTemplate",function(){log("TriplesTemplate"),a.SUBRULE(a.TriplesSameSubject),a.OPTION(function(){a.CONSUME(sparqlTokenMap.Period),a.OPTION1(function(){return a.SUBRULE(a.TriplesTemplate)})})}),a.GroupGraphPattern=a.RULE("GroupGraphPattern",function(){log("GroupGraphPattern"),a.CONSUME(sparqlTokenMap.LCurly),a.OR([{ALT:function(){return a.SUBRULE(a.SubSelect)}},{ALT:function(){return a.SUBRULE(a.GroupGraphPatternSub)}}]),a.CONSUME(sparqlTokenMap.RCurly)}),a.GroupGraphPatternSub=a.RULE("GroupGraphPatternSub",function(){log("GroupGraphPatternSub"),a.OPTION(function(){return a.SUBRULE(a.TriplesBlock)}),a.MANY(function(){a.SUBRULE(a.GraphPatternNotTriples),a.OPTION1(function(){return a.CONSUME(sparqlTokenMap.Period)}),a.OPTION2(function(){return a.SUBRULE1(a.TriplesBlock)})})}),a.TriplesBlock=a.RULE("TriplesBlock",function(){log("TriplesBlock"),a.SUBRULE(a.TriplesSameSubjectPath),a.OPTION(function(){a.CONSUME(sparqlTokenMap.Period),a.OPTION1(function(){return a.SUBRULE(a.TriplesBlock)})})}),a.GraphPatternNotTriples=a.RULE("GraphPatternNotTriples",function(){log("GraphPatternNotTriples"),a.OR([{ALT:function(){return a.SUBRULE(a.GroupOrUnionGraphPattern)}},{ALT:function(){return a.SUBRULE(a.OptionalGraphPattern)}},{ALT:function(){return a.SUBRULE(a.MinusGraphPattern)}},{ALT:function(){return a.SUBRULE(a.GraphGraphPattern)}},{ALT:function(){return a.SUBRULE(a.ServiceGraphPattern)}},{ALT:function(){return a.SUBRULE(a.Filter)}},{ALT:function(){return a.SUBRULE(a.Bind)}},{ALT:function(){return a.SUBRULE(a.InlineData)}}])}),a.OptionalGraphPattern=a.RULE("OptionalGraphPattern",function(){log("OptionalGraphPattern"),a.CONSUME(sparqlTokenMap.OPTIONAL),a.SUBRULE(a.GroupGraphPattern)}),a.GraphGraphPattern=a.RULE("GraphGraphPattern",function(){log("GraphGraphPattern"),a.CONSUME(sparqlTokenMap.GRAPH),a.SUBRULE(a.VarOrIri),a.SUBRULE(a.GroupGraphPattern)}),a.ServiceGraphPattern=a.RULE("ServiceGraphPattern",function(){log("ServiceGraphPattern"),a.CONSUME(sparqlTokenMap.SERVICE),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.SILENT)}),a.SUBRULE(a.VarOrIri),a.SUBRULE(a.GroupGraphPattern)}),a.Bind=a.RULE("Bind",function(){log("Bind"),a.CONSUME(sparqlTokenMap.BIND),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.AS),a.SUBRULE(a.Var),a.CONSUME(sparqlTokenMap.RParen)}),a.InlineData=a.RULE("InlineData",function(){log("InlineData"),a.CONSUME(sparqlTokenMap.VALUES),a.SUBRULE(a.DataBlock)}),a.DataBlock=a.RULE("DataBlock",function(){log("DataBlock"),a.OR([{ALT:function(){return a.SUBRULE(a.InlineDataOneVar)}},{ALT:function(){return a.SUBRULE(a.InlineDataFull)}}])}),a.InlineDataOneVar=a.RULE("InlineDataOneVar",function(){log("InlineDataOneVar"),a.SUBRULE(a.Var),a.CONSUME(sparqlTokenMap.LCurly),a.MANY(function(){return a.SUBRULE(a.DataBlockValue)}),a.CONSUME(sparqlTokenMap.RCurly)}),a.InlineDataFull=a.RULE("InlineDataFull",function(){log("InlineDataFull"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.NIL)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.MANY(function(){return a.SUBRULE(a.Var)}),a.CONSUME(sparqlTokenMap.RParen)}}]),a.CONSUME(sparqlTokenMap.LCurly),a.MANY1(function(){return a.OR1([{ALT:function(){a.CONSUME1(sparqlTokenMap.LParen),a.MANY2(function(){return a.SUBRULE(a.DataBlockValue)}),a.CONSUME1(sparqlTokenMap.RParen)}},{ALT:function(){return a.CONSUME1(sparqlTokenMap.NIL)}}])}),a.CONSUME(sparqlTokenMap.RCurly)}),a.DataBlockValue=a.RULE("DataBlockValue",function(){log("DataBlockValue"),a.OR([{ALT:function(){return a.SUBRULE(a.iri)}},{ALT:function(){return a.SUBRULE(a.RDFLiteral)}},{ALT:function(){return a.SUBRULE(a.NumericLiteral)}},{ALT:function(){return a.SUBRULE(a.BooleanLiteral)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.UNDEF)}}])}),a.MinusGraphPattern=a.RULE("MinusGraphPattern",function(){log("MinusGraphPattern"),a.CONSUME(sparqlTokenMap.MINUS),a.SUBRULE(a.GroupGraphPattern)}),a.GroupOrUnionGraphPattern=a.RULE("GroupOrUnionGraphPattern",function(){log("GroupOrUnionGraphPattern"),a.SUBRULE(a.GroupGraphPattern),a.MANY(function(){a.CONSUME(sparqlTokenMap.UNION),a.SUBRULE1(a.GroupGraphPattern)})}),a.Filter=a.RULE("Filter",function(){log("Filter"),a.CONSUME(sparqlTokenMap.FILTER),a.SUBRULE(a.Constraint)}),a.Constraint=a.RULE("Constraint",function(){log("Constraint"),a.OR([{ALT:function(){return a.SUBRULE(a.BrackettedExpression)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall)}},{ALT:function(){return a.SUBRULE(a.FunctionCall)}}])}),a.FunctionCall=a.RULE("FunctionCall",function(){log("FunctionCall"),a.SUBRULE(a.iri),a.SUBRULE(a.ArgList)}),a.ArgList=a.RULE("ArgList",function(){log("ArgList"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.NIL)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.MANY(function(){a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression)}),a.CONSUME(sparqlTokenMap.RParen)}}])}),a.ExpressionList=a.RULE("ExpressionList",function(){log("ExpressionList"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.NIL)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.MANY(function(){a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression)}),a.CONSUME(sparqlTokenMap.RParen)}}])}),a.ConstructTemplate=a.RULE("ConstructTemplate",function(){log("ConstructTemplate"),a.CONSUME(sparqlTokenMap.LCurly),a.OPTION(function(){return a.SUBRULE(a.ConstructTriples)}),a.CONSUME(sparqlTokenMap.RCurly)}),a.ConstructTriples=a.RULE("ConstructTriples",function(){log("ConstructTriples"),a.SUBRULE(a.TriplesSameSubject),a.OPTION(function(){a.CONSUME(sparqlTokenMap.Period),a.OPTION1(function(){return a.SUBRULE(a.ConstructTriples)})})}),a.TriplesSameSubject=a.RULE("TriplesSameSubject",function(){log("TriplesSameSubject"),a.OR([{ALT:function(){a.SUBRULE(a.VarOrTerm),a.SUBRULE(a.PropertyListNotEmpty)}},{ALT:function(){a.SUBRULE(a.TriplesNode),a.SUBRULE(a.PropertyList)}}])}),a.PropertyList=a.RULE("PropertyList",function(){log("PropertyList"),a.OPTION(function(){return a.SUBRULE(a.PropertyListNotEmpty)})}),a.PropertyListNotEmpty=a.RULE("PropertyListNotEmpty",function(){log("PropertyListNotEmpty"),a.SUBRULE(a.Verb),a.SUBRULE(a.ObjectList),a.MANY(function(){a.CONSUME(sparqlTokenMap.Semicolon),a.OPTION(function(){a.SUBRULE1(a.Verb),a.SUBRULE1(a.ObjectList)})})}),a.Verb=a.RULE("Verb",function(){log("Verb"),a.OR([{ALT:function(){return a.SUBRULE(a.VarOrIri)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.A)}}])}),a.ObjectList=a.RULE("ObjectList",function(){log("ObjectList"),a.AT_LEAST_ONE_SEP({SEP:sparqlTokenMap.Comma,DEF:function(){return a.SUBRULE(a.Object)}})}),a.Object=a.RULE("Object",function(){log("Object"),a.SUBRULE(a.GraphNode)}),a.TriplesSameSubjectPath=a.RULE("TriplesSameSubjectPath",function(){log("TriplesSameSubjectPath"),a.OR([{ALT:function(){a.SUBRULE(a.VarOrTerm),a.SUBRULE(a.PropertyListPathNotEmpty)}},{ALT:function(){a.SUBRULE(a.TriplesNodePath),a.SUBRULE(a.PropertyListPath)}}])}),a.PropertyListPath=a.RULE("PropertyListPath",function(){log("PropertyListPath"),a.OPTION(function(){return a.SUBRULE(a.PropertyListPathNotEmpty)})}),a.PropertyListPathNotEmpty=a.RULE("PropertyListPathNotEmpty",function(){log("PropertyListPathNotEmpty"),a.OR([{ALT:function(){return a.SUBRULE(a.VerbPath)}},{ALT:function(){return a.SUBRULE(a.VerbSimple)}}]),a.SUBRULE(a.ObjectListPath),a.MANY(function(){a.CONSUME(sparqlTokenMap.Semicolon),a.OPTION(function(){a.OR1([{ALT:function(){return a.SUBRULE1(a.VerbPath)}},{ALT:function(){return a.SUBRULE1(a.VerbSimple)}}]),a.SUBRULE1(a.ObjectListPath)})})}),a.VerbPath=a.RULE("VerbPath",function(){log("VerbPath"),a.SUBRULE(a.Path)}),a.VerbSimple=a.RULE("VerbSimple",function(){log("VerbSimple"),a.SUBRULE(a.Var)}),a.ObjectListPath=a.RULE("ObjectListPath",function(){log("ObjectListPath"),a.AT_LEAST_ONE_SEP({SEP:sparqlTokenMap.Comma,DEF:function(){return a.SUBRULE(a.ObjectPath)}})}),a.ObjectPath=a.RULE("ObjectPath",function(){log("ObjectPath"),a.SUBRULE(a.GraphNodePath)}),a.Path=a.RULE("Path",function(){log("Path"),a.SUBRULE(a.PathAlternative)}),a.PathAlternative=a.RULE("PathAlternative",function(){log("PathAlternative"),a.AT_LEAST_ONE_SEP({SEP:sparqlTokenMap.Pipe,DEF:function(){return a.SUBRULE(a.PathSequence)}})}),a.PathSequence=a.RULE("PathSequence",function(){log("PathSequence"),a.AT_LEAST_ONE_SEP({SEP:sparqlTokenMap.ForwardSlash,DEF:function(){return a.SUBRULE(a.PathEltOrInverse)}})}),a.PathElt=a.RULE("PathElt",function(){log("PathElt"),a.SUBRULE(a.PathPrimary),a.OPTION(function(){return a.SUBRULE(a.PathMod)})}),a.PathEltOrInverse=a.RULE("PathEltOrInverse",function(){log("PathEltOrInverse"),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.Caret)}),a.SUBRULE(a.PathElt)}),a.PathMod=a.RULE("PathMod",function(){log("PathMod"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.QuestionMark)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.Star)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.Plus)}}])}),a.PathPrimary=a.RULE("PathPrimary",function(){log("PathPrimary"),a.OR([{ALT:function(){return a.SUBRULE(a.iri)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.A)}},{ALT:function(){a.CONSUME(sparqlTokenMap.Bang),a.SUBRULE(a.PathNegatedPropertySet)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Path),a.CONSUME(sparqlTokenMap.RParen)}}])}),a.PathNegatedPropertySet=a.RULE("PathNegatedPropertySet",function(){log("PathNegatedPropertySet"),a.OR([{ALT:function(){return a.SUBRULE(a.PathOneInPropertySet)}},{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.MANY_SEP({SEP:sparqlTokenMap.Pipe,DEF:function(){return a.SUBRULE1(a.PathOneInPropertySet)}}),a.CONSUME(sparqlTokenMap.RParen)}}])}),a.PathOneInPropertySet=a.RULE("PathOneInPropertySet",function(){log("PathOneInPropertySet"),a.OPTION(function(){return a.CONSUME(sparqlTokenMap.Caret)}),a.OR([{ALT:function(){return a.SUBRULE(a.iri)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.A)}}])}),a.Integer=a.RULE("Integer",function(){log("Integer"),a.CONSUME(sparqlTokenMap.INTEGER)}),a.TriplesNode=a.RULE("TriplesNode",function(){log("TriplesNode"),a.OR([{ALT:function(){return a.SUBRULE(a.Collection)}},{ALT:function(){return a.SUBRULE(a.BlankNodePropertyList)}}])}),a.BlankNodePropertyList=a.RULE("BlankNodePropertyList",function(){log("BlankNodePropertyList"),a.CONSUME(sparqlTokenMap.LBracket),a.SUBRULE(a.PropertyListNotEmpty),a.CONSUME(sparqlTokenMap.RBracket)}),a.TriplesNodePath=a.RULE("TriplesNodePath",function(){log("TriplesNodePath"),a.OR([{ALT:function(){return a.SUBRULE(a.CollectionPath)}},{ALT:function(){return a.SUBRULE(a.BlankNodePropertyListPath)}}])}),a.BlankNodePropertyListPath=a.RULE("BlankNodePropertyListPath",function(){log("BlankNodePropertyListPath"),a.CONSUME(sparqlTokenMap.LBracket),a.SUBRULE(a.PropertyListPathNotEmpty),a.CONSUME(sparqlTokenMap.RBracket)}),a.Collection=a.RULE("Collection",function(){log("Collection"),a.CONSUME(sparqlTokenMap.LParen),a.AT_LEAST_ONE(function(){return a.SUBRULE(a.GraphNode)}),a.CONSUME(sparqlTokenMap.RParen)}),a.CollectionPath=a.RULE("CollectionPath",function(){log("CollectionPath"),a.CONSUME(sparqlTokenMap.LParen),a.AT_LEAST_ONE(function(){return a.SUBRULE(a.GraphNodePath)}),a.CONSUME(sparqlTokenMap.RParen)}),a.GraphNode=a.RULE("GraphNode",function(){log("GraphNode"),a.OR([{ALT:function(){return a.SUBRULE(a.VarOrTerm)}},{ALT:function(){return a.SUBRULE(a.TriplesNode)}}])}),a.GraphNodePath=a.RULE("GraphNodePath",function(){log("GraphNodePath"),a.OR([{ALT:function(){return a.SUBRULE(a.VarOrTerm)}},{ALT:function(){return a.SUBRULE(a.TriplesNodePath)}}])}),a.VarOrTerm=a.RULE("VarOrTerm",function(){log("VarOrTerm"),a.OR([{ALT:function(){return a.SUBRULE(a.Var)}},{ALT:function(){return a.SUBRULE(a.GraphTerm)}}])}),a.VarOrIri=a.RULE("VarOrIri",function(){log("VarOrIri"),a.OR([{ALT:function(){return a.SUBRULE(a.Var)}},{ALT:function(){return a.SUBRULE(a.iri)}}])}),a.Var=a.RULE("Var",function(){log("Var"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.VAR1)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.VAR2)}}])}),a.GraphTerm=a.RULE("GraphTerm",function(){log("GraphTerm"),a.OR([{ALT:function(){return a.SUBRULE(a.iri)}},{ALT:function(){return a.SUBRULE(a.RDFLiteral)}},{ALT:function(){return a.SUBRULE(a.NumericLiteral)}},{ALT:function(){return a.SUBRULE(a.BooleanLiteral)}},{ALT:function(){return a.SUBRULE(a.BlankNode)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.NIL)}}])}),a.Expression=a.RULE("Expression",function(){log("Expression"),a.SUBRULE(a.ConditionalOrExpression)}),a.ConditionalOrExpression=a.RULE("ConditionalOrExpression",function(){log("ConditionalOrExpression"),a.AT_LEAST_ONE_SEP({SEP:sparqlTokenMap.LogicalOr,DEF:function(){return a.SUBRULE(a.ConditionalAndExpression)}})}),a.ConditionalAndExpression=a.RULE("ConditionalAndExpression",function(){log("ConditionalAndExpression"),a.AT_LEAST_ONE_SEP({SEP:sparqlTokenMap.LogicalAnd,DEF:function(){return a.SUBRULE(a.ValueLogical)}})}),a.ValueLogical=a.RULE("ValueLogical",function(){log("ValueLogical"),a.SUBRULE(a.RelationalExpression)}),a.RelationalExpression=a.RULE("RelationalExpression",function(){log("RelationalExpression"),a.SUBRULE(a.NumericExpression),a.OPTION(function(){return a.OR([{ALT:function(){a.OR1([{ALT:function(){return a.CONSUME(sparqlTokenMap.Equals)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.NotEquals)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.LessThan)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.GreaterThan)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.LessThanEquals)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.GreaterThanEquals)}}]),a.SUBRULE1(a.NumericExpression)}},{ALT:function(){a.CONSUME(sparqlTokenMap.IN),a.SUBRULE(a.ExpressionList)}},{ALT:function(){a.CONSUME(sparqlTokenMap.NOT_IN),a.SUBRULE1(a.ExpressionList)}}])})}),a.NumericExpression=a.RULE("NumericExpression",function(){log("NumericExpression"),a.SUBRULE(a.AdditiveExpression)}),a.AdditiveExpression=a.RULE("AdditiveExpression",function(){log("AdditiveExpression"),a.SUBRULE(a.MultiplicativeExpression),a.MANY(function(){return a.OR([{ALT:function(){a.OR1([{ALT:function(){return a.CONSUME(sparqlTokenMap.Plus)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.Minus)}}]),a.SUBRULE1(a.MultiplicativeExpression)}},{ALT:function(){a.OR2([{ALT:function(){return a.SUBRULE(a.NumericLiteralPositive)}},{ALT:function(){return a.SUBRULE(a.NumericLiteralNegative)}}]),a.MANY1(function(){return a.OR3([{ALT:function(){a.OR4([{ALT:function(){return a.CONSUME(sparqlTokenMap.Star)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.ForwardSlash)}}]),a.SUBRULE1(a.UnaryExpression)}}])})}}])})}),a.MultiplicativeExpression=a.RULE("MultiplicativeExpression",function(){log("MultiplicativeExpression"),a.SUBRULE(a.UnaryExpression),a.MANY(function(){return a.OR([{ALT:function(){a.CONSUME(sparqlTokenMap.Star),a.SUBRULE1(a.UnaryExpression)}},{ALT:function(){a.CONSUME(sparqlTokenMap.ForwardSlash),a.SUBRULE2(a.UnaryExpression)}}])})}),a.UnaryExpression=a.RULE("UnaryExpression",function(){log("UnaryExpression"),a.OR([{ALT:function(){a.CONSUME(sparqlTokenMap.Bang),a.SUBRULE(a.PrimaryExpression)}},{ALT:function(){a.CONSUME(sparqlTokenMap.Plus),a.SUBRULE1(a.PrimaryExpression)}},{ALT:function(){a.CONSUME(sparqlTokenMap.Minus),a.SUBRULE2(a.PrimaryExpression)}},{ALT:function(){return a.SUBRULE3(a.PrimaryExpression)}}])}),a.PrimaryExpression=a.RULE("PrimaryExpression",function(){log("PrimaryExpression"),a.OR([{ALT:function(){return a.SUBRULE(a.BrackettedExpression)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall)}},{ALT:function(){return a.SUBRULE(a.iriOrFunction)}},{ALT:function(){return a.SUBRULE(a.RDFLiteral)}},{ALT:function(){return a.SUBRULE(a.NumericLiteral)}},{ALT:function(){return a.SUBRULE(a.BooleanLiteral)}},{ALT:function(){return a.SUBRULE(a.Var)}}])}),a.BrackettedExpression=a.RULE("BrackettedExpression",function(){log("BrackettedExpression"),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STR=a.RULE("BuiltInCall_STR",function(){log("BuiltInCall_STR"),a.CONSUME(sparqlTokenMap.STR),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_LANG=a.RULE("BuiltInCall_LANG",function(){log("BuiltInCall_LANG"),a.CONSUME(sparqlTokenMap.LANG),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_LANGMATCHERS=a.RULE("BuiltInCall_LANGMATCHERS",function(){log("BuiltInCall_LANGMATCHERS"),a.CONSUME(sparqlTokenMap.LANGMATCHERS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_DATATYPE=a.RULE("BuiltInCall_DATATYPE",function(){log("BuiltInCall_DATATYPE"),a.CONSUME(sparqlTokenMap.DATATYPE),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_BOUND=a.RULE("BuiltInCall_BOUND",function(){log("BuiltInCall_BOUND"),a.CONSUME(sparqlTokenMap.BOUND),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Var),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_IRI=a.RULE("BuiltInCall_IRI",function(){log("BuiltInCall_IRI"),a.CONSUME(sparqlTokenMap.IRI),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_URI=a.RULE("BuiltInCall_URI",function(){log("BuiltInCall_URI"),a.CONSUME(sparqlTokenMap.URI),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_BNODE=a.RULE("BuiltInCall_BNODE",function(){log("BuiltInCall_BNODE"),a.CONSUME(sparqlTokenMap.BNODE),a.OR([{ALT:function(){a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.NIL)}}])}),a.BuiltInCall_RAND=a.RULE("BuiltInCall_RAND",function(){log("BuiltInCall_RAND"),a.CONSUME(sparqlTokenMap.RAND),a.CONSUME(sparqlTokenMap.NIL)}),a.BuiltInCall_ABS=a.RULE("BuiltInCall_ABS",function(){log("BuiltInCall_ABS"),a.CONSUME(sparqlTokenMap.ABS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_CEIL=a.RULE("BuiltInCall_CEIL",function(){log("BuiltInCall_CEIL"),a.CONSUME(sparqlTokenMap.CEIL),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_FLOOR=a.RULE("BuiltInCall_FLOOR",function(){log("BuiltInCall_FLOOR"),a.CONSUME(sparqlTokenMap.FLOOR),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_ROUND=a.RULE("BuiltInCall_ROUND",function(){log("BuiltInCall_ROUND"),a.CONSUME(sparqlTokenMap.ROUND),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_CONCAT=a.RULE("BuiltInCall_CONCAT",function(){log("BuiltInCall_CONCAT"),a.CONSUME(sparqlTokenMap.CONCAT),a.SUBRULE(a.ExpressionList)}),a.BuiltInCall_STRLEN=a.RULE("BuiltInCall_STRLEN",function(){log("BuiltInCall_STRLEN"),a.CONSUME(sparqlTokenMap.STRLEN),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_UCASE=a.RULE("BuiltInCall_UCASE",function(){log("BuiltInCall_UCASE"),a.CONSUME(sparqlTokenMap.UCASE),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_LCASE=a.RULE("BuiltInCall_LCASE",function(){log("BuiltInCall_LCASE"),a.CONSUME(sparqlTokenMap.LCASE),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_ENCODE_FOR_URI=a.RULE("BuiltInCall_ENCODE_FOR_URI",function(){log("BuiltInCall_ENCODE_FOR_URI"),a.CONSUME(sparqlTokenMap.ENCODE_FOR_URI),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_CONTAINS=a.RULE("BuiltInCall_CONTAINS",function(){log("BuiltInCall_CONTAINS"),a.CONSUME(sparqlTokenMap.CONTAINS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STRSTARTS=a.RULE("BuiltInCall_STRSTARTS",function(){log("BuiltInCall_STRSTARTS"),a.CONSUME(sparqlTokenMap.STRSTARTS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STRENDS=a.RULE("BuiltInCall_STRENDS",function(){log("BuiltInCall_STRENDS"),a.CONSUME(sparqlTokenMap.STRENDS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STRBEFORE=a.RULE("BuiltInCall_STRBEFORE",function(){log("BuiltInCall_STRBEFORE"),a.CONSUME(sparqlTokenMap.STRBEFORE),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STRAFTER=a.RULE("BuiltInCall_STRAFTER",function(){log("BuiltInCall_STRAFTER"),a.CONSUME(sparqlTokenMap.STRAFTER),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_YEAR=a.RULE("BuiltInCall_YEAR",function(){log("BuiltInCall_YEAR"),a.CONSUME(sparqlTokenMap.YEAR),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_MONTH=a.RULE("BuiltInCall_MONTH",function(){log("BuiltInCall_MONTH"),a.CONSUME(sparqlTokenMap.MONTH),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_DAY=a.RULE("BuiltInCall_DAY",function(){log("BuiltInCall_DAY"),a.CONSUME(sparqlTokenMap.DAY),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_HOURS=a.RULE("BuiltInCall_HOURS",function(){log("BuiltInCall_HOURS"),a.CONSUME(sparqlTokenMap.HOURS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_MINUTES=a.RULE("BuiltInCall_MINUTES",function(){log("BuiltInCall_MINUTES"),a.CONSUME(sparqlTokenMap.MINUTES),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_SECONDS=a.RULE("BuiltInCall_SECONDS",function(){log("BuiltInCall_SECONDS"),a.CONSUME(sparqlTokenMap.SECONDS),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_TIMEZONE=a.RULE("BuiltInCall_TIMEZONE",function(){log("BuiltInCall_TIMEZONE"),a.CONSUME(sparqlTokenMap.TIMEZONE),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_TZ=a.RULE("BuiltInCall_TZ",function(){log("BuiltInCall_TZ"),a.CONSUME(sparqlTokenMap.TZ),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_NOW=a.RULE("BuiltInCall_NOW",function(){log("BuiltInCall_NOW"),a.CONSUME(sparqlTokenMap.NOW),a.CONSUME(sparqlTokenMap.NIL)}),a.BuiltInCall_UUID=a.RULE("BuiltInCall_UUID",function(){log("BuiltInCall_UUID"),a.CONSUME(sparqlTokenMap.UUID),a.CONSUME(sparqlTokenMap.NIL)}),a.BuiltInCall_STRUUID=a.RULE("BuiltInCall_STRUUID",function(){log("BuiltInCall_STRUUID"),a.CONSUME(sparqlTokenMap.STRUUID),a.CONSUME(sparqlTokenMap.NIL)}),a.BuiltInCall_MD5=a.RULE("BuiltInCall_MD5",function(){log("BuiltInCall_MD5"),a.CONSUME(sparqlTokenMap.MD5),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_SHA1=a.RULE("BuiltInCall_SHA1",function(){log("BuiltInCall_SHA1"),a.CONSUME(sparqlTokenMap.SHA1),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_SHA256=a.RULE("BuiltInCall_SHA256",function(){log("BuiltInCall_SHA256"),a.CONSUME(sparqlTokenMap.SHA256),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_SHA384=a.RULE("BuiltInCall_SHA384",function(){log("BuiltInCall_SHA384"),a.CONSUME(sparqlTokenMap.SHA384),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_SHA512=a.RULE("BuiltInCall_SHA512",function(){log("BuiltInCall_SHA512"),a.CONSUME(sparqlTokenMap.SHA512),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_COALESCE=a.RULE("BuiltInCall_COALESCE",function(){log("BuiltInCall_COALESCE"),a.CONSUME(sparqlTokenMap.COALESCE),a.SUBRULE(a.ExpressionList)}),a.BuiltInCall_IF=a.RULE("BuiltInCall_IF",function(){log("BuiltInCall_IF"),a.CONSUME(sparqlTokenMap.IF),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME1(sparqlTokenMap.Comma),a.SUBRULE2(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STRLANG=a.RULE("BuiltInCall_STRLANG",function(){log("BuiltInCall_STRLANG"),a.CONSUME(sparqlTokenMap.STRLANG),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_STRDT=a.RULE("BuiltInCall_STRDT",function(){log("BuiltInCall_STRDT"),a.CONSUME(sparqlTokenMap.STRDT),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_sameTerm=a.RULE("BuiltInCall_sameTerm",function(){log("BuiltInCall_sameTerm"),a.CONSUME(sparqlTokenMap.sameTerm),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_isIRI=a.RULE("BuiltInCall_isIRI",function(){log("BuiltInCall_isIRI"),a.CONSUME(sparqlTokenMap.isIRI),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_isURI=a.RULE("BuiltInCall_isURI",function(){log("BuiltInCall_isURI"),a.CONSUME(sparqlTokenMap.isURI),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_isBlank=a.RULE("BuiltInCall_isBlank",function(){log("BuiltInCall_isBlank"),a.CONSUME(sparqlTokenMap.isBlank),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_isLiteral=a.RULE("BuiltInCall_isLiteral",function(){log("BuiltInCall_isLiteral"),a.CONSUME(sparqlTokenMap.isLiteral),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall_isNumeric=a.RULE("BuiltInCall_isNumeric",function(){log("BuiltInCall_isNumeric"),a.CONSUME(sparqlTokenMap.isNumeric),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.BuiltInCall=a.RULE("BuiltInCall",function(){log("BuiltInCall"),a.OR([{ALT:function(){return a.SUBRULE(a.Aggregate)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STR)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_LANG)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_LANGMATCHERS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_DATATYPE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_BOUND)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_IRI)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_URI)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_BNODE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_RAND)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_ABS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_CEIL)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_FLOOR)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_ROUND)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_CONCAT)}},{ALT:function(){return a.SUBRULE(a.SubstringExpression)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRLEN)}},{ALT:function(){return a.SUBRULE(a.StrReplaceExpression)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_UCASE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_LCASE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_ENCODE_FOR_URI)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_CONTAINS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRSTARTS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRENDS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRBEFORE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRAFTER)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_YEAR)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_MONTH)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_DAY)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_HOURS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_MINUTES)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_SECONDS)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_TIMEZONE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_TZ)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_NOW)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_UUID)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRUUID)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_MD5)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_SHA1)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_SHA256)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_SHA384)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_SHA512)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_COALESCE)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_IF)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRLANG)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_STRDT)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_sameTerm)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_isIRI)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_isURI)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_isBlank)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_isLiteral)}},{ALT:function(){return a.SUBRULE(a.BuiltInCall_isNumeric)}},{ALT:function(){return a.SUBRULE(a.RegexExpression)}},{ALT:function(){return a.SUBRULE(a.ExistsFunction)}},{ALT:function(){return a.SUBRULE(a.NotExistsFunction)}}])}),a.RegexExpression=a.RULE("RegexExpression",function(){log("RegexExpression"),a.CONSUME(sparqlTokenMap.REGEX),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.OPTION(function(){a.CONSUME1(sparqlTokenMap.Comma),a.SUBRULE2(a.Expression)}),a.CONSUME(sparqlTokenMap.RParen)}),a.SubstringExpression=a.RULE("SubstringExpression",function(){log("SubstringExpression"),a.CONSUME(sparqlTokenMap.SUBSTR),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.OPTION(function(){a.CONSUME1(sparqlTokenMap.Comma),a.SUBRULE2(a.Expression)}),a.CONSUME(sparqlTokenMap.RParen)}),a.StrReplaceExpression=a.RULE("StrReplaceExpression",function(){log("StrReplaceExpression"),a.CONSUME(sparqlTokenMap.REPLACE),a.CONSUME(sparqlTokenMap.LParen),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.Comma),a.SUBRULE1(a.Expression),a.CONSUME1(sparqlTokenMap.Comma),a.SUBRULE2(a.Expression),a.OPTION(function(){a.CONSUME2(sparqlTokenMap.Comma),a.SUBRULE3(a.Expression)}),a.CONSUME(sparqlTokenMap.RParen)}),a.ExistsFunction=a.RULE("ExistsFunction",function(){log("ExistsFunction"),a.CONSUME(sparqlTokenMap.EXISTS),a.SUBRULE(a.GroupGraphPattern)}),a.NotExistsFunction=a.RULE("NotExistsFunction",function(){log("NotExistsFunction"),a.CONSUME(sparqlTokenMap.NOT_EXISTS),a.SUBRULE(a.GroupGraphPattern)}),a.Count=a.RULE("Count",function(){log("Count"),a.CONSUME(sparqlTokenMap.COUNT),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.OR([{ALT:function(){return a.CONSUME3(sparqlTokenMap.Star)}},{ALT:function(){return a.SUBRULE(a.Expression)}}]),a.CONSUME(sparqlTokenMap.RParen)}),a.Sum=a.RULE("Sum",function(){log("Sum"),a.CONSUME(sparqlTokenMap.SUM),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.Min=a.RULE("Min",function(){log("Min"),a.CONSUME(sparqlTokenMap.MIN),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.Max=a.RULE("Max",function(){log("Max"),a.CONSUME(sparqlTokenMap.MAX),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.Avg=a.RULE("Avg",function(){log("Avg"),a.CONSUME(sparqlTokenMap.AVG),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.Sample=a.RULE("Sample",function(){log("Sample"),a.CONSUME(sparqlTokenMap.SAMPLE),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.CONSUME(sparqlTokenMap.RParen)}),a.GroupConcat=a.RULE("GroupConcat",function(){log("GroupConcat"),a.CONSUME(sparqlTokenMap.GROUP_CONCAT),a.CONSUME1(sparqlTokenMap.LParen),a.OPTION(function(){return a.CONSUME2(sparqlTokenMap.DISTINCT)}),a.SUBRULE(a.Expression),a.OPTION1(function(){a.CONSUME(sparqlTokenMap.Semicolon),a.CONSUME(sparqlTokenMap.SEPARATOR),a.CONSUME(sparqlTokenMap.Equals),a.SUBRULE(a.String)}),a.CONSUME(sparqlTokenMap.RParen)}),a.Aggregate=a.RULE("Aggregate",function(){log("Aggregate"),a.OR([{ALT:function(){return a.SUBRULE(a.Count)}},{ALT:function(){return a.SUBRULE(a.Sum)}},{ALT:function(){return a.SUBRULE(a.Min)}},{ALT:function(){return a.SUBRULE(a.Max)}},{ALT:function(){return a.SUBRULE(a.Avg)}},{ALT:function(){return a.SUBRULE(a.Sample)}},{ALT:function(){return a.SUBRULE(a.GroupConcat)}}])}),a.iriOrFunction=a.RULE("iriOrFunction",function(){log("iriOrFunction"),a.SUBRULE(a.iri),a.OPTION(function(){return a.SUBRULE(a.ArgList)})}),a.RDFLiteral=a.RULE("RDFLiteral",function(){log("RDFLiteral"),a.SUBRULE(a.String),a.OPTION(function(){return a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.LANGTAG)}},{ALT:function(){a.CONSUME(sparqlTokenMap.DoubleCaret),a.SUBRULE(a.iri)}}])})}),a.NumericLiteral=a.RULE("NumericLiteral",function(){log("NumericLiteral"),a.OR([{ALT:function(){return a.SUBRULE(a.NumericLiteralUnsigned)}},{ALT:function(){return a.SUBRULE(a.NumericLiteralPositive)}},{ALT:function(){return a.SUBRULE(a.NumericLiteralNegative)}}])}),a.NumericLiteralUnsigned=a.RULE("NumericLiteralUnsigned",function(){log("NumericLiteralUnsigned"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.INTEGER)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DECIMAL)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DOUBLE)}}])}),a.NumericLiteralPositive=a.RULE("NumericLiteralPositive",function(){log("NumericLiteralPositive"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.INTEGER_POSITIVE)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DECIMAL_POSITIVE)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DOUBLE_POSITIVE)}}])}),a.NumericLiteralNegative=a.RULE("NumericLiteralNegative",function(){log("NumericLiteralNegative"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.INTEGER_NEGATIVE)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DECIMAL_NEGATIVE)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.DOUBLE_NEGATIVE)}}])}),a.BooleanLiteral=a.RULE("BooleanLiteral",function(){log("BooleanLiteral"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.TRUE)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.FALSE)}}])}),a.String=a.RULE("String",function(){log("String"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.STRING_LITERAL1)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.STRING_LITERAL2)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.STRING_LITERAL_LONG1)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.STRING_LITERAL_LONG2)}}])}),a.iri=a.RULE("iri",function(){log("iri"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.IRIREF)}},{ALT:function(){return a.SUBRULE(a.PrefixedName)}}])}),a.PrefixedName=a.RULE("PrefixedName",function(){log("PrefixedName"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.PNAME_LN)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.PNAME_NS)}}])}),a.BlankNode=a.RULE("BlankNode",function(){log("BlankNode"),a.OR([{ALT:function(){return a.CONSUME(sparqlTokenMap.BLANK_NODE_LABEL)}},{ALT:function(){return a.CONSUME(sparqlTokenMap.ANON)}}])}),a.lexer=new chevrotain.Lexer(r),a}return __extends(e,n),e}(chevrotain.Parser),indexOfSELECT=baseTokens.indexOf(sparqlTokenMap.SELECT),stardogTokens=baseTokens.slice(0,indexOfSELECT).concat(pathsTokens,baseTokens.slice(indexOfSELECT)),StardogSparqlParser=function(n){function e(e){var r=n.call(this,e,stardogTokens)||this;return r.Query=r.OVERRIDE_RULE("Query",function(){r.OR([{ALT:function(){return r.SUBRULE(r.SelectQuery)}},{ALT:function(){return r.SUBRULE(r.ConstructQuery)}},{ALT:function(){return r.SUBRULE(r.DescribeQuery)}},{ALT:function(){return r.SUBRULE(r.AskQuery)}},{ALT:function(){return r.SUBRULE(r.PathQuery)}}]),r.SUBRULE(r.ValuesClause)}),r.PathQuery=r.RULE("PathQuery",function(){r.SUBRULE(r.PathSpec),r.MANY(function(){return r.SUBRULE(r.DatasetClause)}),r.CONSUME(sparqlTokenMap.START),r.SUBRULE(r.PathTerminal),r.CONSUME(sparqlTokenMap.END),r.SUBRULE1(r.PathTerminal),r.SUBRULE(r.Via),r.OPTION(function(){return r.SUBRULE(r.MaxLength)}),r.SUBRULE(r.SolutionModifier)}),r.Via=r.RULE("Via",function(){r.CONSUME(sparqlTokenMap.VIA),r.OR([{ALT:function(){return r.SUBRULE(r.GroupGraphPattern)}},{ALT:function(){return r.SUBRULE(r.Var)}},{ALT:function(){return r.SUBRULE(r.Path)}}])}),r.PathTerminal=r.RULE("PathTerminal",function(){r.SUBRULE(r.Var),r.OPTION(function(){r.OR([{ALT:function(){r.CONSUME(sparqlTokenMap.Equals),r.SUBRULE(r.iri)}},{ALT:function(){return r.SUBRULE(r.GroupGraphPattern)}}])})}),r.PathSpec=r.RULE("PathSpec",function(){r.OR([{ALT:function(){return r.CONSUME(sparqlTokenMap.PATHS)}},{ALT:function(){return r.CONSUME(sparqlTokenMap.PATHS_SHORTEST)}},{ALT:function(){return r.CONSUME(sparqlTokenMap.PATHS_ALL)}}]),r.OPTION1(function(){return r.CONSUME(sparqlTokenMap.CYCLIC)})}),r.BuiltInCall=r.OVERRIDE_RULE("BuiltInCall",function(){r.OR([{ALT:function(){return r.SUBRULE(r.Aggregate)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STR)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_LANG)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_LANGMATCHERS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_DATATYPE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_BOUND)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_IRI)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_URI)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_BNODE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_RAND)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_ABS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_CEIL)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_FLOOR)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_ROUND)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_CONCAT)}},{ALT:function(){return r.SUBRULE(r.SubstringExpression)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRLEN)}},{ALT:function(){return r.SUBRULE(r.StrReplaceExpression)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_UCASE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_LCASE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_ENCODE_FOR_URI)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_CONTAINS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRSTARTS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRENDS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRBEFORE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRAFTER)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_YEAR)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_MONTH)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_DAY)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_HOURS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_MINUTES)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_SECONDS)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_TIMEZONE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_TZ)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_NOW)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_UUID)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRUUID)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_MD5)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_SHA1)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_SHA256)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_SHA384)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_SHA512)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_COALESCE)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_IF)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRLANG)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_STRDT)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_sameTerm)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_isIRI)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_isURI)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_isBlank)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_isLiteral)}},{ALT:function(){return r.SUBRULE(r.BuiltInCall_isNumeric)}},{ALT:function(){return r.SUBRULE(r.RegexExpression)}},{ALT:function(){return r.SUBRULE(r.ExistsFunction)}},{ALT:function(){return r.SUBRULE(r.NotExistsFunction)}},{ALT:function(){return r.SUBRULE(r.StardogOrCustomFunction)}}])}),r.StardogOrCustomFunction=r.RULE("StardogOrCustomFunction",function(){r.CONSUME(sparqlTokenMap.Unknown),r.SUBRULE(r.ExpressionList)}),r.ConstructTemplate=r.OVERRIDE_RULE("ConstructTemplate",function(){r.CONSUME(sparqlTokenMap.LCurly),r.OPTION(function(){return r.SUBRULE(r.Quads)}),r.CONSUME(sparqlTokenMap.RCurly)}),chevrotain.Parser.performSelfAnalysis(r),r}return __extends(e,n),e}(BaseSparqlParser),W3SpecSparqlParser=function(n){function e(e){var r=n.call(this,e,baseTokens)||this;return chevrotain.Parser.performSelfAnalysis(r),r}return __extends(e,n),e}(BaseSparqlParser),escapeSequence=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\[uU]|\\(.)/g,escapeReplacements={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"},unescapedStringLiteralQuote=/^"([^"\\\r\n]+)"/,unescapedStringLiteralSingleQuote=/^'([^'\\\r\n]+)'/,stringLiteralQuote=/^"((?:[^"\\\r\n]|\\.)*)"(?=[^"])/,stringLiteralSingleQuote=/^'((?:[^'\\\r\n]|\\.)*)'(?=[^'])/,stringLiteralLongQuote=/^"""([^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*)"""/,stringLiteralLongSingleQuote=/^'''([^'\\]*(?:(?:\\.|'(?!''))[^'\\]*)*)'''/,illegalIriChars=/[\x00-\x20<>\\"\{\}\|\^\`]/,escapedIri=/^<((?:[^ <>{}\\]|\\[uU])+)>[ \t]*/,unescapedIri=/^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>[ \t]*/,unescape=function(n){try{return n.replace(escapeSequence,function(n,e,r,a){if(e)return String.fromCharCode(parseInt(e,16));if(r){var t=parseInt(r,16);return t<=65535?String.fromCharCode(t):String.fromCharCode(55296+(t-=65536)/1024,56320+(1023&t))}var o=escapeReplacements[a];if(!o)throw new Error;return o})}catch(n){return null}},unicodeRegexp=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,turtleTokenMap={Comment:chevrotain.createToken({name:"Comment",pattern:/#[^\n]*/,group:"comments"}),LBracket:sparqlTokenMap.LBracket,RBracket:sparqlTokenMap.RBracket,LParen:sparqlTokenMap.LParen,RParen:sparqlTokenMap.RParen,Period:sparqlTokenMap.Period,WhiteSpace:sparqlTokenMap.WhiteSpace,TRUE:sparqlTokenMap.TRUE,FALSE:sparqlTokenMap.FALSE,DoubleCaret:sparqlTokenMap.DoubleCaret,Comma:sparqlTokenMap.Comma,Semicolon:sparqlTokenMap.Semicolon,A:sparqlTokenMap.A,PREFIX:sparqlTokenMap.PREFIX,BASE:sparqlTokenMap.BASE,PNAME_NS:sparqlTokenMap.PNAME_NS,PNAME_LN:sparqlTokenMap.PNAME_LN,BLANK_NODE_LABEL:sparqlTokenMap.BLANK_NODE_LABEL,TTL_BASE:chevrotain.createToken({name:"TTL_BASE",pattern:/@base/}),TTL_PREFIX:chevrotain.createToken({name:"TTL_PREFIX",pattern:/@prefix/}),LANGTAG:sparqlTokenMap.LANGTAG,INTEGER:chevrotain.createToken({name:"INTEGER",pattern:regex.and(regex.option(/[+-]/),/\d+/)}),DECIMAL:chevrotain.createToken({name:"DECIMAL",pattern:regex.and(regex.option(/[+-]/),/(\d*\.\d+)/)}),DOUBLE:chevrotain.createToken({name:"DOUBLE",pattern:regex.and(regex.option(/[+-]/),regex.or(regex.and(/\d+\.\d*/,EXPONENT),regex.and(/\.\d+/,EXPONENT),regex.and(/\d+/,EXPONENT)))}),EXPONENT:chevrotain.createToken({name:"EXPONENT",pattern:EXPONENT}),ECHAR:chevrotain.createToken({name:"ECHAR",pattern:ECHAR}),ANON:sparqlTokenMap.ANON,PLX:chevrotain.createToken({name:"PLX",pattern:PLX}),PERCENT:sparqlTokenMap.PERCENT,HEX:chevrotain.createToken({name:"HEX",pattern:HEX}),STRING_LITERAL_LONG_SINGLE_QUOTE:chevrotain.createToken({name:"STRING_LITERAL_LONG_SINGLE_QUOTE",pattern:function(n,e){void 0===e&&(e=0);var r=stringLiteralLongSingleQuote.exec(n.slice(e));return r&&null!==unescape(r[1])?r:null},line_breaks:!0}),STRING_LITERAL_LONG_QUOTE:chevrotain.createToken({name:"STRING_LITERAL_LONG_QUOTE",pattern:function(n,e){void 0===e&&(e=0);var r=stringLiteralLongQuote.exec(n.slice(e));return r&&null!==unescape(r[1])?r:null},line_breaks:!0}),STRING_LITERAL_QUOTE:chevrotain.createToken({name:"STRING_LITERAL_QUOTE",pattern:function(n,e){void 0===e&&(e=0);var r=n.slice(e),a=unescapedStringLiteralQuote.exec(r);return a||((a=stringLiteralQuote.exec(r))?null===unescape(a[1])?null:a:null)},line_breaks:!1}),STRING_LITERAL_SINGLE_QUOTE:chevrotain.createToken({name:"STRING_LITERAL_SINGLE_QUOTE",pattern:function(n,e){void 0===e&&(e=0);var r=n.slice(e),a=unescapedStringLiteralSingleQuote.exec(r);return a||((a=stringLiteralSingleQuote.exec(r))?null===unescape(a[1])?null:a:null)},line_breaks:!1}),UCHAR:chevrotain.createToken({name:"UCHAR",pattern:function(n,e){return void 0===e&&(e=0),unicodeRegexp.exec(n.slice(e))},line_breaks:!1}),IRIREF:chevrotain.createToken({name:"IRIREF",pattern:function(n,e){void 0===e&&(e=0);var r=n.slice(e),a=unescapedIri.exec(r);if(a)return a;if(!(a=escapedIri.exec(r)))return null;var t=unescape(a[1]);return null===t||illegalIriChars.test(t)?null:a},line_breaks:!1}),PN_CHARS_BASE:chevrotain.createToken({name:"PN_CHARS_BASE",pattern:PN_CHARS_BASE}),PN_CHARS_U:chevrotain.createToken({name:"PN_CHARS_U",pattern:PN_CHARS_U}),PN_CHARS:chevrotain.createToken({name:"PN_CHARS",pattern:PN_CHARS}),PN_PREFIX:chevrotain.createToken({name:"PN_PREFIX",pattern:PN_PREFIX}),PN_LOCAL:chevrotain.createToken({name:"PN_LOCAL",pattern:PN_LOCAL}),PN_LOCAL_ESC:chevrotain.createToken({name:"PN_LOCAL_ESC",pattern:PN_LOCAL_ESC}),Unknown:chevrotain.createToken({name:"Unknown",pattern:/\w+/})},turtleTokenTypes=[turtleTokenMap.Comment,sparqlTokenMap.ANON,sparqlTokenMap.LBracket,sparqlTokenMap.RBracket,sparqlTokenMap.LParen,sparqlTokenMap.RParen,sparqlTokenMap.WhiteSpace,sparqlTokenMap.TRUE,sparqlTokenMap.FALSE,sparqlTokenMap.Comma,sparqlTokenMap.Semicolon,sparqlTokenMap.PNAME_NS,sparqlTokenMap.A,sparqlTokenMap.PREFIX,sparqlTokenMap.BASE,sparqlTokenMap.PNAME_LN,sparqlTokenMap.BLANK_NODE_LABEL,turtleTokenMap.TTL_BASE,turtleTokenMap.TTL_PREFIX,sparqlTokenMap.LANGTAG,turtleTokenMap.DOUBLE,turtleTokenMap.DECIMAL,sparqlTokenMap.Period,sparqlTokenMap.DoubleCaret,turtleTokenMap.IRIREF,turtleTokenMap.STRING_LITERAL_LONG_SINGLE_QUOTE,turtleTokenMap.STRING_LITERAL_LONG_QUOTE,turtleTokenMap.STRING_LITERAL_QUOTE,turtleTokenMap.STRING_LITERAL_SINGLE_QUOTE,turtleTokenMap.INTEGER,turtleTokenMap.EXPONENT,turtleTokenMap.PLX,sparqlTokenMap.PERCENT,turtleTokenMap.HEX,turtleTokenMap.PN_CHARS_BASE,turtleTokenMap.PN_CHARS_U,turtleTokenMap.PN_CHARS,turtleTokenMap.PN_PREFIX,turtleTokenMap.PN_LOCAL,turtleTokenMap.PN_LOCAL_ESC,turtleTokenMap.ECHAR,turtleTokenMap.UCHAR,turtleTokenMap.Unknown],tokens$1=Object.freeze({turtleTokenMap:turtleTokenMap,turtleTokenTypes:turtleTokenTypes}),TurtleParser=function(n){function e(e){var r=n.call(this,[],turtleTokenTypes,__assign({outputCst:!0,recoveryEnabled:!0},e))||this;return r.namespacesMap={},r.semanticErrors=[],r.resetManagedState=function(){r.namespacesMap={},r.semanticErrors=[]},r.tokenize=function(n){return r.lexer.tokenize(n).tokens},r.parse=function(n){r.input=r.lexer.tokenize(n).tokens;var e=r.turtleDoc(),a=r.errors.slice(),t=r.semanticErrors.slice();return r.resetManagedState(),{errors:a,semanticErrors:t,cst:e}},r.turtleDoc=r.RULE("turtleDoc",function(){r.MANY(function(){return r.SUBRULE(r.statement)})}),r.statement=r.RULE("statement",function(){r.OR([{ALT:function(){return r.SUBRULE(r.directive)}},{ALT:function(){r.SUBRULE(r.triples),r.CONSUME(turtleTokenMap.Period)}}])}),r.directive=r.RULE("directive",function(){r.OR([{ALT:function(){return r.SUBRULE(r.prefixID)}},{ALT:function(){return r.SUBRULE(r.base)}},{ALT:function(){return r.SUBRULE(r.sparqlPrefix)}},{ALT:function(){return r.SUBRULE(r.sparqlBase)}}])}),r.prefixID=r.RULE("prefixID",function(){r.CONSUME(turtleTokenMap.TTL_PREFIX);var n=r.CONSUME(turtleTokenMap.PNAME_NS),e=r.CONSUME(turtleTokenMap.IRIREF),a=n.image.slice(0,-1),t=e.image;r.namespacesMap[a]=t,r.CONSUME(turtleTokenMap.Period)}),r.base=r.RULE("base",function(){r.CONSUME(turtleTokenMap.TTL_BASE),r.CONSUME(turtleTokenMap.IRIREF),r.CONSUME(turtleTokenMap.Period)}),r.sparqlBase=r.RULE("sparqlBase",function(){r.CONSUME(turtleTokenMap.BASE),r.CONSUME(turtleTokenMap.IRIREF)}),r.sparqlPrefix=r.RULE("sparqlPrefix",function(){r.CONSUME(turtleTokenMap.PREFIX);var n=r.CONSUME(turtleTokenMap.PNAME_NS),e=r.CONSUME(turtleTokenMap.IRIREF),a=n.image.slice(0,-1),t=e.image;r.namespacesMap[a]=t}),r.triples=r.RULE("triples",function(){r.OR([{ALT:function(){r.SUBRULE(r.subject),r.SUBRULE(r.predicateObjectList)}},{ALT:function(){r.SUBRULE(r.blankNodePropertyList),r.OPTION(function(){return r.SUBRULE1(r.predicateObjectList)})}}])}),r.predicateObjectList=r.RULE("predicateObjectList",function(){r.SUBRULE(r.verb),r.SUBRULE(r.objectList),r.OPTION(function(){r.CONSUME(turtleTokenMap.Semicolon),r.OPTION1(function(){r.SUBRULE1(r.verb),r.SUBRULE1(r.objectList)})}),r.MANY(function(){r.CONSUME1(turtleTokenMap.Semicolon),r.OPTION2(function(){r.SUBRULE2(r.verb),r.SUBRULE2(r.objectList)})})}),r.subject=r.RULE("subject",function(){r.OR([{ALT:function(){return r.SUBRULE(r.iri)}},{ALT:function(){return r.SUBRULE(r.BlankNode)}},{ALT:function(){return r.SUBRULE(r.collection)}}])}),r.predicate=r.RULE("predicate",function(){r.SUBRULE(r.iri)}),r.objectList=r.RULE("objectList",function(){r.SUBRULE(r.object),r.MANY(function(){r.CONSUME(turtleTokenMap.Comma),r.SUBRULE1(r.object)})}),r.verb=r.RULE("verb",function(){r.OR([{ALT:function(){return r.SUBRULE(r.predicate)}},{ALT:function(){return r.CONSUME(turtleTokenMap.A)}}])}),r.literal=r.RULE("literal",function(){r.OR([{ALT:function(){return r.SUBRULE(r.RDFLiteral)}},{ALT:function(){return r.SUBRULE(r.NumericLiteral)}},{ALT:function(){return r.SUBRULE(r.BooleanLiteral)}}])}),r.blankNodePropertyList=r.RULE("blankNodePropertyList",function(){r.CONSUME(turtleTokenMap.LBracket),r.SUBRULE(r.predicateObjectList),r.CONSUME(turtleTokenMap.RBracket)}),r.object=r.RULE("object",function(){r.OR([{ALT:function(){return r.SUBRULE(r.iri)}},{ALT:function(){return r.SUBRULE(r.BlankNode)}},{ALT:function(){return r.SUBRULE(r.collection)}},{ALT:function(){return r.SUBRULE(r.blankNodePropertyList)}},{ALT:function(){return r.SUBRULE(r.literal)}}])}),r.collection=r.RULE("collection",function(){r.CONSUME(turtleTokenMap.LParen),r.MANY(function(){return r.SUBRULE(r.object)}),r.CONSUME(turtleTokenMap.RParen)}),r.NumericLiteral=r.RULE("NumericLiteral",function(){r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.INTEGER)}},{ALT:function(){return r.CONSUME(turtleTokenMap.DECIMAL)}},{ALT:function(){return r.CONSUME(turtleTokenMap.DOUBLE)}}])}),r.RDFLiteral=r.RULE("RDFLiteral",function(){r.SUBRULE(r.String),r.OPTION(function(){r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.LANGTAG)}},{ALT:function(){r.CONSUME(turtleTokenMap.DoubleCaret),r.SUBRULE(r.iri)}}])})}),r.BooleanLiteral=r.RULE("BooleanLiteral",function(){r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.TRUE)}},{ALT:function(){return r.CONSUME(turtleTokenMap.FALSE)}}])}),r.String=r.RULE("String",function(){r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.STRING_LITERAL_QUOTE)}},{ALT:function(){return r.CONSUME(turtleTokenMap.STRING_LITERAL_SINGLE_QUOTE)}},{ALT:function(){return r.CONSUME(turtleTokenMap.STRING_LITERAL_LONG_SINGLE_QUOTE)}},{ALT:function(){return r.CONSUME(turtleTokenMap.STRING_LITERAL_LONG_QUOTE)}}])}),r.iri=r.RULE("iri",function(){r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.IRIREF)}},{ALT:function(){return r.SUBRULE(r.PrefixedName)}}])}),r.PrefixedName=r.RULE("PrefixedName",function(){var n=r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.PNAME_LN)}},{ALT:function(){return r.CONSUME(turtleTokenMap.PNAME_NS)}}]);n.image.slice(0,n.image.indexOf(":"))in r.namespacesMap||r.semanticErrors.push({name:"NoNamespacePrefixError",message:"A prefix was used for which there was no namespace defined.",token:n,context:{ruleStack:r.getHumanReadableRuleStack(),ruleOccurrenceStack:r.RULE_OCCURRENCE_STACK.slice()},resyncedTokens:[]})}),r.BlankNode=r.RULE("BlankNode",function(){r.OR([{ALT:function(){return r.CONSUME(turtleTokenMap.BLANK_NODE_LABEL)}},{ALT:function(){return r.CONSUME(turtleTokenMap.ANON)}}])}),r.lexer=new chevrotain.Lexer(turtleTokenTypes),chevrotain.Parser.performSelfAnalysis(r),r}return __extends(e,n),e}(chevrotain.Parser),FROM_BLOCK_END_MATCHER=/^\s*to\s*{/i,FROM_JSON_BLOCK_END_MATCHER=/((?:.|\s)*?)to\s*{/i,explicitEndMatcher=function(n,e,r){for(var a=0;a<n.length;a++)if(n[a]!==e);else{var t=n.slice(a+1);if(r.exec(t))return[n.slice(0,a)]}return null},smsTokenMap={STRING_LITERAL1:sparqlTokenMap.STRING_LITERAL1,STRING_LITERAL2:sparqlTokenMap.STRING_LITERAL2,STRING_LITERAL_LONG1:sparqlTokenMap.STRING_LITERAL_LONG1,STRING_LITERAL_LONG2:sparqlTokenMap.STRING_LITERAL_LONG2,IRIREF:sparqlTokenMap.IRIREF,PNAME_LN:sparqlTokenMap.PNAME_LN,PNAME_NS:sparqlTokenMap.PNAME_NS,NIL:sparqlTokenMap.NIL,DISTINCT:sparqlTokenMap.DISTINCT,VAR1:sparqlTokenMap.VAR1,VAR2:sparqlTokenMap.VAR2,BIND:sparqlTokenMap.BIND,AS:sparqlTokenMap.AS,WHERE:sparqlTokenMap.WHERE,LANGTAG:sparqlTokenMap.LANGTAG,INTEGER:sparqlTokenMap.INTEGER,DECIMAL:sparqlTokenMap.DECIMAL,DOUBLE:sparqlTokenMap.DOUBLE,INTEGER_POSITIVE:sparqlTokenMap.INTEGER_POSITIVE,DECIMAL_POSITIVE:sparqlTokenMap.DECIMAL_POSITIVE,DOUBLE_POSITIVE:sparqlTokenMap.DOUBLE_POSITIVE,INTEGER_NEGATIVE:sparqlTokenMap.INTEGER_NEGATIVE,DECIMAL_NEGATIVE:sparqlTokenMap.DECIMAL_NEGATIVE,DOUBLE_NEGATIVE:sparqlTokenMap.DOUBLE_NEGATIVE,TRUE:sparqlTokenMap.TRUE,FALSE:sparqlTokenMap.FALSE,BLANK_NODE_LABEL:sparqlTokenMap.BLANK_NODE_LABEL,ANON:sparqlTokenMap.ANON,A:sparqlTokenMap.A,FROM:sparqlTokenMap.FROM,PREFIX:sparqlTokenMap.PREFIX,Comment:sparqlTokenMap.Comment,Period:sparqlTokenMap.Period,Comma:sparqlTokenMap.Comma,LCurly:sparqlTokenMap.LCurly,RCurly:sparqlTokenMap.RCurly,LParen:sparqlTokenMap.LParen,RParen:sparqlTokenMap.RParen,WhiteSpace:sparqlTokenMap.WhiteSpace,DoubleCaret:sparqlTokenMap.DoubleCaret,Semicolon:sparqlTokenMap.Semicolon,LBracket:sparqlTokenMap.LBracket,RBracket:sparqlTokenMap.RBracket,Template:chevrotain.createToken({name:"Template",pattern:/template/i}),TO:chevrotain.createToken({name:"TO",pattern:/to/i}),Sql:chevrotain.createToken({name:"Sql",pattern:/sql/i}),GraphQl:chevrotain.createToken({name:"GraphQl",pattern:/graphql/i}),Json:chevrotain.createToken({name:"Json",pattern:/json/i}),Mapping:chevrotain.createToken({name:"Mapping",pattern:/mapping/i}),SqlBlock:chevrotain.createToken({name:"SqlBlock",pattern:function(n,e,r){void 0===e&&(e=0);var a=r.slice(-2),t=a[0],o=a[1];if(!t||!o||t.tokenType.tokenName!==smsTokenMap.Sql.tokenName||o.tokenType.tokenName!==smsTokenMap.LCurly.tokenName)return null;var E=n.slice(e);return explicitEndMatcher(E,"}",FROM_BLOCK_END_MATCHER)},line_breaks:!0}),JsonBlock:chevrotain.createToken({name:"JsonBlock",pattern:function(n,e,r){void 0===e&&(e=0);var a=r.slice(-1)[0];if(!a||a.tokenType.tokenName!==smsTokenMap.Json.tokenName)return null;var t=n.slice(e),o=FROM_JSON_BLOCK_END_MATCHER.exec(t);return o?o.slice(1):null},line_breaks:!0}),GraphQlBlock:chevrotain.createToken({name:"GraphQlBlock",pattern:function(n,e,r){void 0===e&&(e=0);var a=r.slice(-2),t=a[0],o=a[1];if(!t||!o||t.tokenType.tokenName!==smsTokenMap.GraphQl.tokenName||o.tokenType.tokenName!==smsTokenMap.LCurly.tokenName)return null;var E=n.slice(e);return explicitEndMatcher(E,"}",FROM_BLOCK_END_MATCHER)},line_breaks:!0})},smsTokenTypes=[smsTokenMap.WhiteSpace,smsTokenMap.Comment,smsTokenMap.LParen,smsTokenMap.RParen,smsTokenMap.Period,smsTokenMap.Template,smsTokenMap.IRIREF,smsTokenMap.PNAME_LN,smsTokenMap.PNAME_NS,smsTokenMap.NIL,smsTokenMap.DISTINCT,smsTokenMap.VAR1,smsTokenMap.VAR2,smsTokenMap.BIND,smsTokenMap.AS,smsTokenMap.WHERE,smsTokenMap.TO,smsTokenMap.LANGTAG,smsTokenMap.INTEGER,smsTokenMap.DECIMAL,smsTokenMap.DOUBLE,smsTokenMap.INTEGER_POSITIVE,smsTokenMap.DECIMAL_POSITIVE,smsTokenMap.DOUBLE_POSITIVE,smsTokenMap.INTEGER_NEGATIVE,smsTokenMap.DECIMAL_NEGATIVE,smsTokenMap.DOUBLE_NEGATIVE,smsTokenMap.TRUE,smsTokenMap.FALSE,smsTokenMap.BLANK_NODE_LABEL,smsTokenMap.ANON,smsTokenMap.A,smsTokenMap.FROM,smsTokenMap.PREFIX,smsTokenMap.Comma,smsTokenMap.DoubleCaret,smsTokenMap.Semicolon,smsTokenMap.LBracket,smsTokenMap.RBracket,smsTokenMap.Sql,smsTokenMap.GraphQl,smsTokenMap.Json,smsTokenMap.Mapping,smsTokenMap.SqlBlock,smsTokenMap.JsonBlock,smsTokenMap.GraphQlBlock,smsTokenMap.LCurly,smsTokenMap.RCurly,smsTokenMap.STRING_LITERAL1,smsTokenMap.STRING_LITERAL2,smsTokenMap.STRING_LITERAL_LONG1,smsTokenMap.STRING_LITERAL_LONG2],tokens$2=Object.freeze({smsTokenMap:smsTokenMap,smsTokenTypes:smsTokenTypes}),SmsParser=function(n){function e(e){var r=n.call(this,[],smsTokenTypes,__assign({outputCst:!0,recoveryEnabled:!0},e))||this;return r.tokenize=function(n){return r.lexer.tokenize(n).tokens},r.parse=function(n){r.input=r.lexer.tokenize(n).tokens;var e=r.MappingDoc();return{errors:r.errors,cst:e}},r.MappingDoc=r.RULE("MappingDoc",function(){r.MANY(function(){return r.SUBRULE(r.PrefixDecl)}),r.SUBRULE(r.MappingClause),r.MANY1(function(){r.CONSUME(smsTokenMap.Semicolon),r.SUBRULE1(r.MappingClause)})}),r.MappingClause=r.RULE("MappingClause",function(){r.SUBRULE(r.MappingDecl),r.SUBRULE(r.FromClause),r.SUBRULE(r.ToClause),r.SUBRULE(r.WhereClause)}),r.MappingDecl=r.RULE("MappingDecl",function(){r.CONSUME(smsTokenMap.Mapping),r.OPTION(function(){return r.SUBRULE(r.iri)})}),r.FromClause=r.RULE("FromClause",function(){r.CONSUME(smsTokenMap.FROM),r.OR([{ALT:function(){return r.SUBRULE(r.SqlClause)}},{ALT:function(){return r.SUBRULE(r.JsonClause)}},{ALT:function(){return r.SUBRULE(r.GraphQlClause)}}])}),r.JsonClause=r.RULE("JsonClause",function(){r.CONSUME(smsTokenMap.Json),r.CONSUME(smsTokenMap.JsonBlock)}),r.GraphQlClause=r.RULE("GraphQlClause",function(){r.CONSUME(smsTokenMap.GraphQl),r.CONSUME(smsTokenMap.LCurly),r.CONSUME(smsTokenMap.GraphQlBlock),r.CONSUME(smsTokenMap.RCurly)}),r.SqlClause=r.RULE("SqlClause",function(){r.CONSUME(smsTokenMap.Sql),r.CONSUME(smsTokenMap.LCurly),r.CONSUME(smsTokenMap.SqlBlock),r.CONSUME(smsTokenMap.RCurly)}),r.ToClause=r.RULE("ToClause",function(){r.CONSUME(smsTokenMap.TO),r.SUBRULE(r.ConstructTemplate)}),r.WhereClause=r.RULE("WhereClause",function(){r.CONSUME(smsTokenMap.WHERE),r.CONSUME(smsTokenMap.LCurly),r.MANY(function(){return r.SUBRULE(r.Bind)}),r.CONSUME(smsTokenMap.RCurly)}),r.Bind=r.RULE("Bind",function(){r.CONSUME(smsTokenMap.BIND),r.CONSUME(smsTokenMap.LParen),r.SUBRULE(r.TemplateOrCast),r.CONSUME(smsTokenMap.AS),r.SUBRULE(r.Var),r.CONSUME(smsTokenMap.RParen)}),r.TemplateOrCast=r.RULE("TemplateOrCast",function(){r.OR([{ALT:function(){return r.SUBRULE(r.TemplateFunc)}},{ALT:function(){return r.SUBRULE(r.CastFunc)}}])}),r.CastFunc=r.RULE("CastFunc",function(){r.SUBRULE(r.iri),r.CONSUME(smsTokenMap.LParen),r.SUBRULE(r.Var),r.CONSUME(smsTokenMap.RParen)}),r.TemplateFunc=r.RULE("TemplateFunc",function(){r.CONSUME(smsTokenMap.Template),r.CONSUME(smsTokenMap.LParen),r.SUBRULE(r.String),r.CONSUME(smsTokenMap.RParen)}),r.PrefixDecl=r.RULE("PrefixDecl",function(){r.CONSUME(smsTokenMap.PREFIX),r.CONSUME(smsTokenMap.PNAME_NS),r.CONSUME(smsTokenMap.IRIREF)}),r.iri=r.RULE("iri",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.IRIREF)}},{ALT:function(){return r.SUBRULE(r.PrefixedName)}}])}),r.PrefixedName=r.RULE("PrefixedName",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.PNAME_LN)}},{ALT:function(){return r.CONSUME(smsTokenMap.PNAME_NS)}}])}),r.ConstructTemplate=r.RULE("ConstructTemplate",function(){r.CONSUME(smsTokenMap.LCurly),r.OPTION(function(){return r.SUBRULE(r.ConstructTriples)}),r.CONSUME(smsTokenMap.RCurly)}),r.ConstructTriples=r.RULE("ConstructTriples",function(){r.SUBRULE(r.TriplesSameSubject),r.OPTION(function(){r.CONSUME(smsTokenMap.Period),r.OPTION1(function(){return r.SUBRULE(r.ConstructTriples)})})}),r.TriplesSameSubject=r.RULE("TriplesSameSubject",function(){r.OR([{ALT:function(){r.SUBRULE(r.VarOrTerm),r.SUBRULE(r.PropertyListNotEmpty)}},{ALT:function(){r.SUBRULE(r.TriplesNode),r.SUBRULE(r.PropertyList)}}])}),r.VarOrTerm=r.RULE("VarOrTerm",function(){r.OR([{ALT:function(){return r.SUBRULE(r.Var)}},{ALT:function(){return r.SUBRULE(r.GraphTerm)}}])}),r.PropertyListNotEmpty=r.RULE("PropertyListNotEmpty",function(){r.SUBRULE(r.Verb),r.SUBRULE(r.ObjectList),r.MANY(function(){r.CONSUME(smsTokenMap.Semicolon),r.OPTION(function(){r.SUBRULE1(r.Verb),r.SUBRULE1(r.ObjectList)})})}),r.TriplesNode=r.RULE("TriplesNode",function(){r.OR([{ALT:function(){return r.SUBRULE(r.Collection)}},{ALT:function(){return r.SUBRULE(r.BlankNodePropertyList)}}])}),r.PropertyList=r.RULE("PropertyList",function(){r.OPTION(function(){return r.SUBRULE(r.PropertyListNotEmpty)})}),r.GraphTerm=r.RULE("GraphTerm",function(){r.OR([{ALT:function(){return r.SUBRULE(r.iri)}},{ALT:function(){return r.SUBRULE(r.RDFLiteral)}},{ALT:function(){return r.SUBRULE(r.NumericLiteral)}},{ALT:function(){return r.SUBRULE(r.BooleanLiteral)}},{ALT:function(){return r.SUBRULE(r.BlankNode)}},{ALT:function(){return r.CONSUME(smsTokenMap.NIL)}}])}),r.Verb=r.RULE("Verb",function(){r.OR([{ALT:function(){return r.SUBRULE(r.VarOrIri)}},{ALT:function(){return r.CONSUME(smsTokenMap.A)}}])}),r.ObjectList=r.RULE("ObjectList",function(){r.AT_LEAST_ONE_SEP({SEP:smsTokenMap.Comma,DEF:function(){return r.SUBRULE(r.Object)}})}),r.Object=r.RULE("Object",function(){r.SUBRULE(r.GraphNode)}),r.Collection=r.RULE("Collection",function(){r.CONSUME(smsTokenMap.LParen),r.AT_LEAST_ONE(function(){return r.SUBRULE(r.GraphNode)}),r.CONSUME(smsTokenMap.RParen)}),r.BlankNodePropertyList=r.RULE("BlankNodePropertyList",function(){r.CONSUME(smsTokenMap.LBracket),r.SUBRULE(r.PropertyListNotEmpty),r.CONSUME(smsTokenMap.RBracket)}),r.VarOrIri=r.RULE("VarOrIri",function(){r.OR([{ALT:function(){return r.SUBRULE(r.Var)}},{ALT:function(){return r.SUBRULE(r.iri)}}])}),r.RDFLiteral=r.RULE("RDFLiteral",function(){r.SUBRULE(r.String),r.OPTION(function(){return r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.LANGTAG)}},{ALT:function(){r.CONSUME(smsTokenMap.DoubleCaret),r.SUBRULE(r.iri)}}])})}),r.NumericLiteral=r.RULE("NumericLiteral",function(){r.OR([{ALT:function(){return r.SUBRULE(r.NumericLiteralUnsigned)}},{ALT:function(){return r.SUBRULE(r.NumericLiteralPositive)}},{ALT:function(){return r.SUBRULE(r.NumericLiteralNegative)}}])}),r.NumericLiteralUnsigned=r.RULE("NumericLiteralUnsigned",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.INTEGER)}},{ALT:function(){return r.CONSUME(smsTokenMap.DECIMAL)}},{ALT:function(){return r.CONSUME(smsTokenMap.DOUBLE)}}])}),r.NumericLiteralPositive=r.RULE("NumericLiteralPositive",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.INTEGER_POSITIVE)}},{ALT:function(){return r.CONSUME(smsTokenMap.DECIMAL_POSITIVE)}},{ALT:function(){return r.CONSUME(smsTokenMap.DOUBLE_POSITIVE)}}])}),r.NumericLiteralNegative=r.RULE("NumericLiteralNegative",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.INTEGER_NEGATIVE)}},{ALT:function(){return r.CONSUME(smsTokenMap.DECIMAL_NEGATIVE)}},{ALT:function(){return r.CONSUME(smsTokenMap.DOUBLE_NEGATIVE)}}])}),r.BooleanLiteral=r.RULE("BooleanLiteral",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.TRUE)}},{ALT:function(){return r.CONSUME(smsTokenMap.FALSE)}}])}),r.BlankNode=r.RULE("BlankNode",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.BLANK_NODE_LABEL)}},{ALT:function(){return r.CONSUME(smsTokenMap.ANON)}}])}),r.GraphNode=r.RULE("GraphNode",function(){r.OR([{ALT:function(){return r.SUBRULE(r.VarOrTerm)}},{ALT:function(){return r.SUBRULE(r.TriplesNode)}}])}),r.Var=r.RULE("Var",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.VAR1)}},{ALT:function(){return r.CONSUME(smsTokenMap.VAR2)}}])}),r.String=r.RULE("String",function(){r.OR([{ALT:function(){return r.CONSUME(smsTokenMap.STRING_LITERAL1)}},{ALT:function(){return r.CONSUME(smsTokenMap.STRING_LITERAL2)}},{ALT:function(){return r.CONSUME(smsTokenMap.STRING_LITERAL_LONG1)}},{ALT:function(){return r.CONSUME(smsTokenMap.STRING_LITERAL_LONG2)}}])}),r.lexer=new chevrotain.Lexer(smsTokenTypes),chevrotain.Parser.performSelfAnalysis(r),r}return __extends(e,n),e}(chevrotain.Parser),traverse=function(n,e){_traverse(n,null,e)};function isCstNode(n){return"name"in n}var TraverseContext=function(){return function(n){var e=n.node,r=n.parentCtx;this.node=__assign({},e),this.parentCtx=__assign({},r)}}(),_traverse=function(n,e,r){if(void 0===e&&(e=new TraverseContext({node:n})),!isCstNode(n))return r(__assign({},e));var a=n.children;Object.keys(a).forEach(function(n){var t=a[n];t.length&&t.forEach(function(n){var a=new TraverseContext({node:n,parentCtx:e});r(a,function(e){var t=e?new TraverseContext({node:e.node,parentCtx:e.parentCtx}):a;_traverse(n,t,r)})})})};exports.sparqlTokens=tokens,exports.turtleTokens=tokens$1,exports.smsTokens=tokens$2,exports.sparqlKeywords=keywords,exports.sparqlTerminals=terminals,exports.matchers=matchers,exports.BaseSparqlParser=BaseSparqlParser,exports.StardogSparqlParser=StardogSparqlParser,exports.W3SpecSparqlParser=W3SpecSparqlParser,exports.TurtleParser=TurtleParser,exports.SmsParser=SmsParser,exports.traverse=traverse,exports.isCstNode=isCstNode;
